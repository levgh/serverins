#!/bin/bash

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
DOMAIN="domenforserver123"
TOKEN="7c4ac80c-d14f-4ca6-ae8c-df2b04a939ae"
USERNAME=$(whoami)
SERVER_IP=$(hostname -I | awk '{print $1}')
DUCKDNS_URL="$DOMAIN.duckdns.org"

echo "=========================================="
echo "üöÄ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –£–°–¢–ê–ù–û–í–ö–ê –î–û–ú–ê–®–ù–ï–ì–û –°–ï–†–í–ï–†–ê"
echo "=========================================="

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo "[$(date '+%H:%M:%S')] $1"
}

# 1. –û–ë–ù–û–í–õ–ï–ù–ò–ï –°–ò–°–¢–ï–ú–´
log "üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
sudo apt update && sudo apt upgrade -y

# 2. –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô
log "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤..."
sudo apt install -y \
  curl wget git \
  docker.io docker-compose \
  apache2 mysql-server \
  php php-curl php-gd php-mysql php-xml php-zip php-mbstring php-intl \
  cron nano htop tree unzip

# 3. –ù–ê–°–¢–†–û–ô–ö–ê DOCKER
log "üê≥ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Docker..."
sudo systemctl enable docker
sudo systemctl start docker
sudo usermod -aG docker $USER
newgrp docker << EOF
EOF

# 4. –ù–ê–°–¢–†–û–ô–ö–ê –ß–ê–°–û–í–û–ì–û –ü–û–Ø–°–ê
log "‚è∞ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—Ä–µ–º–µ–Ω–∏..."
sudo timedatectl set-timezone Europe/Moscow

# 5. –ù–ê–°–¢–†–û–ô–ö–ê DUCKDNS
log "üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ DuckDNS..."
mkdir -p /home/$USER/scripts

cat > /home/$USER/scripts/duckdns-update.sh << EOF
#!/bin/bash
DOMAIN="$DOMAIN"
TOKEN="$TOKEN"
URL="https://www.duckdns.org/update?domains=\${DOMAIN}&token=\${TOKEN}&ip="
response=\$(curl -s -w "\n%{http_code}" "\$URL")
http_code=\$(echo "\$response" | tail -n1)
content=\$(echo "\$response" | head -n1)
echo "\$(date): HTTP \$http_code - \$content" >> "/home/$USER/scripts/duckdns.log"
EOF

chmod +x /home/$USER/scripts/duckdns-update.sh

# –î–æ–±–∞–≤–ª—è–µ–º –≤ Cron
(crontab -l 2>/dev/null; echo "*/5 * * * * /home/$USER/scripts/duckdns-update.sh") | crontab -
/home/$USER/scripts/duckdns-update.sh

# 6. –°–û–ó–î–ê–ù–ò–ï –ü–ê–ü–û–ö –î–õ–Ø –°–ï–†–í–ò–°–û–í
log "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫..."
mkdir -p /home/$USER/docker/{jellyfin,tribler,jackett,overseerr,heimdall,uptime-kuma,vaultwarden,homepage,password-manager}
mkdir -p /home/$USER/media/{movies,tv,streaming,music}
mkdir -p /home/$USER/backups

# 7. –ó–ê–ü–£–°–ö –í–°–ï–• –°–ï–†–í–ò–°–û–í –ß–ï–†–ï–ó DOCKER-COMPOSE
log "üê≥ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."

cat > /home/$USER/docker/docker-compose.yml << EOF
version: '3.8'

networks:
  server-net:
    driver: bridge

services:
  # Jellyfin - –º–µ–¥–∏–∞—Å–µ—Ä–≤–µ—Ä
  jellyfin:
    image: jellyfin/jellyfin:latest
    container_name: jellyfin
    restart: unless-stopped
    ports:
      - "8096:8096"
    volumes:
      - /home/$USER/docker/jellyfin:/config
      - /home/$USER/media:/media
    environment:
      - TZ=Europe/Moscow
    networks:
      - server-net

  # Tribler - —Ç–æ—Ä—Ä–µ–Ω—Ç-–∫–ª–∏–µ–Ω—Ç —Å —Å—Ç—Ä–∏–º–∏–Ω–≥–æ–º
  tribler:
    image: tribler/tribler:latest
    container_name: tribler
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - /home/$USER/docker/tribler:/root/.Tribler
      - /home/$USER/media/streaming:/downloads
    environment:
      - TZ=Europe/Moscow
    networks:
      - server-net

  # Jackett - –ø–æ–∏—Å–∫ –ø–æ —Ç—Ä–µ–∫–µ—Ä–∞–º
  jackett:
    image: linuxserver/jackett:latest
    container_name: jackett
    restart: unless-stopped
    ports:
      - "9117:9117"
    volumes:
      - /home/$USER/docker/jackett:/config
      - /home/$USER/media/streaming:/downloads
    environment:
      - TZ=Europe/Moscow
      - PUID=1000
      - PGID=1000
    networks:
      - server-net

  # Overseerr - –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∑–∞–ø—Ä–æ—Å–æ–≤
  overseerr:
    image: linuxserver/overseerr:latest
    container_name: overseerr
    restart: unless-stopped
    ports:
      - "5055:5055"
    volumes:
      - /home/$USER/docker/overseerr:/config
    environment:
      - TZ=Europe/Moscow
      - PUID=1000
      - PGID=1000
    networks:
      - server-net

  # Heimdall - –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
  heimdall:
    image: lscr.io/linuxserver/heimdall:latest
    container_name: heimdall
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - /home/$USER/docker/heimdall:/config
    environment:
      - TZ=Europe/Moscow
      - PUID=1000
      - PGID=1000
    networks:
      - server-net

  # Uptime Kuma - –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
  uptime-kuma:
    image: louislam/uptime-kuma:1
    container_name: uptime-kuma
    restart: unless-stopped
    ports:
      - "3001:3001"
    volumes:
      - /home/$USER/docker/uptime-kuma:/app/data
    environment:
      - TZ=Europe/Moscow
    networks:
      - server-net

  # Vaultwarden - –º–µ–Ω–µ–¥–∂–µ—Ä –ø–∞—Ä–æ–ª–µ–π
  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - /home/$USER/docker/vaultwarden/data:/data
    environment:
      - TZ=Europe/Moscow
      - ADMIN_TOKEN=admin
      - SIGNUPS_ALLOWED=true
    networks:
      - server-net

  # –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
  homepage:
    image: nginx:alpine
    container_name: homepage
    restart: unless-stopped
    ports:
      - "8088:80"
    volumes:
      - /home/$USER/docker/homepage:/usr/share/nginx/html
    networks:
      - server-net

  # –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–∞—Ä–æ–ª–µ–π - –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è
  password-manager:
    build: /home/$USER/docker/password-manager
    container_name: password-manager
    restart: unless-stopped
    ports:
      - "8089:8089"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/$USER:/home/$USER
    environment:
      - USER=$USER
    networks:
      - server-net
EOF

# –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
cd /home/$USER/docker
docker-compose up -d

# 8. –ù–ê–°–¢–†–û–ô–ö–ê NEXTCLOUD
log "‚òÅÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Nextcloud..."
cd /var/www/html
sudo wget -O nextcloud.zip https://download.nextcloud.com/server/releases/latest.zip
sudo unzip -q nextcloud.zip
sudo chown -R www-data:www-data /var/www/html/nextcloud

# –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥ Apache –¥–ª—è Nextcloud
sudo tee /etc/apache2/sites-available/nextcloud.conf > /dev/null << EOF
<VirtualHost *:80>
    ServerName localhost
    DocumentRoot /var/www/html/nextcloud
    <Directory /var/www/html/nextcloud>
        Options FollowSymLinks
        AllowOverride All
        Require all granted
    </Directory>
</VirtualHost>
EOF

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º Nextcloud
sudo a2ensite nextcloud.conf
sudo a2dissite 000-default.conf
sudo a2enmod rewrite headers env dir mime
sudo systemctl reload apache2

# 9. –£–°–¢–ê–ù–û–í–ö–ê OLLAMA (–ù–ï–ô–†–û–°–ï–¢–¨)
log "ü§ñ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ Ollama..."
curl -fsSL https://ollama.ai/install.sh | sh

# –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞
sudo tee /etc/systemd/system/ollama.service > /dev/null << EOF
[Unit]
Description=Ollama Service
After=network.target

[Service]
Type=simple
User=$USER
ExecStart=/usr/local/bin/ollama serve
Restart=always
RestartSec=3
Environment="OLLAMA_HOST=0.0.0.0"

[Install]
WantedBy=multi-user.target
EOF

sudo systemctl daemon-reload
sudo systemctl enable ollama
sudo systemctl start ollama

# –°–∫–∞—á–∏–≤–∞–µ–º –º–æ–¥–µ–ª—å –≤ —Ñ–æ–Ω–µ
log "üì• –°–∫–∞—á–∏–≤–∞–µ–º –º–æ–¥–µ–ª—å –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ (—ç—Ç–æ –∑–∞–π–º–µ—Ç –≤—Ä–µ–º—è)..."
nohup bash -c 'sleep 30 && ollama pull llama2:7b' > /dev/null 2>&1 &

# 10. –ù–ê–°–¢–†–û–ô–ö–ê –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò
log "üõ°Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏..."

# –§–∞–µ—Ä–≤–æ–ª
sudo ufw --force enable
sudo ufw allow 80/tcp
sudo ufw allow 8096/tcp
sudo ufw allow 3001/tcp
sudo ufw allow 8000/tcp
sudo ufw allow 11434/tcp
sudo ufw allow 22/tcp
sudo ufw allow 8088/tcp
sudo ufw allow 8089/tcp

# Fail2ban
sudo apt install -y fail2ban
sudo systemctl enable fail2ban
sudo systemctl start fail2ban

# 11. –°–ö–†–ò–ü–¢ –û–ß–ò–°–¢–ö–ò –°–¢–†–ò–ú–ò–ù–ì–ê
log "üßπ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—á–∏—Å—Ç–∫–∏..."

cat > /home/$USER/scripts/cleanup_streaming.sh << EOF
#!/bin/bash
find "/home/$USER/media/streaming" -type f -mtime +1 -delete
echo "\$(date): Cleaned streaming directory" >> "/home/$USER/scripts/cleanup.log"
EOF

chmod +x /home/$USER/scripts/cleanup_streaming.sh

# –î–æ–±–∞–≤–ª—è–µ–º –≤ cron
(crontab -l 2>/dev/null; echo "0 3 * * * /home/$USER/scripts/cleanup_streaming.sh") | crontab -

# 12. –°–û–ó–î–ê–ù–ò–ï –ì–õ–ê–í–ù–û–ô –°–¢–†–ê–ù–ò–¶–´ –° –ê–í–¢–û–†–ò–ó–ê–¶–ò–ï–ô
log "üè† –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π..."

# HTML –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
cat > /home/$USER/docker/homepage/index.html << 'HTMLEOF'
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–î–æ–º–∞—à–Ω–∏–π –°–µ—Ä–≤–µ—Ä - –í—Ö–æ–¥</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Arial', sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .login-container {
            background: white;
            padding: 40px;
            border-radius: 15px;
            box-shadow: 0 15px 35px rgba(0,0,0,0.1);
            width: 100%;
            max-width: 400px;
        }
        
        .logo {
            text-align: center;
            margin-bottom: 30px;
        }
        
        .logo h1 {
            color: #333;
            font-size: 28px;
            margin-bottom: 5px;
        }
        
        .logo p {
            color: #666;
            font-size: 14px;
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 5px;
            color: #333;
            font-weight: bold;
        }
        
        .form-group input {
            width: 100%;
            padding: 12px 15px;
            border: 2px solid #ddd;
            border-radius: 8px;
            font-size: 16px;
            transition: border-color 0.3s;
        }
        
        .form-group input:focus {
            outline: none;
            border-color: #667eea;
        }
        
        .login-btn {
            width: 100%;
            padding: 12px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 16px;
            font-weight: bold;
            cursor: pointer;
            transition: transform 0.2s;
        }
        
        .login-btn:hover {
            transform: translateY(-2px);
        }
        
        .error-message {
            color: #e74c3c;
            text-align: center;
            margin-top: 15px;
            display: none;
        }
        
        .services-info {
            margin-top: 25px;
            padding-top: 20px;
            border-top: 1px solid #eee;
            text-align: center;
            color: #666;
            font-size: 12px;
        }
    </style>
</head>
<body>
    <div class="login-container">
        <div class="logo">
            <h1>üè† –î–æ–º–∞—à–Ω–∏–π –°–µ—Ä–≤–µ—Ä</h1>
            <p>–í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</p>
        </div>
        
        <form id="loginForm">
            <div class="form-group">
                <label for="username">–õ–æ–≥–∏–Ω:</label>
                <input type="text" id="username" name="username" placeholder="–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω" required>
            </div>
            
            <div class="form-group">
                <label for="password">–ü–∞—Ä–æ–ª—å:</label>
                <input type="password" id="password" name="password" placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å" required>
            </div>
            
            <button type="submit" class="login-btn">–í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É</button>
            
            <div class="error-message" id="errorMessage">
                –ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å
            </div>
        </form>
        
        <div class="services-info">
            –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã: Jellyfin ‚Ä¢ Nextcloud ‚Ä¢ AI –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç ‚Ä¢ –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–∞—Ä–æ–ª–µ–π
        </div>
    </div>

    <script>
        document.getElementById('loginForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const username = document.getElementById('username').value;
            const password = document.getElementById('password').value;
            const errorMessage = document.getElementById('errorMessage');
            
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–Ω–∞ –∏ –ø–∞—Ä–æ–ª—è
            if (username === 'admin' && password === 'homeserver') {
                // –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –Ω–∞ 1 —á–∞—Å
                const sessionData = {
                    user: 'admin',
                    timestamp: Date.now(),
                    expires: Date.now() + (60 * 60 * 1000) // 1 —á–∞—Å
                };
                localStorage.setItem('server_session', JSON.stringify(sessionData));
                
                // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                window.location.href = '/heimdall';
            } else {
                errorMessage.style.display = 'block';
                setTimeout(() => {
                    errorMessage.style.display = 'none';
                }, 3000);
            }
        });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é —Å–µ—Å—Å–∏—é –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
        window.addEventListener('load', function() {
            const session = localStorage.getItem('server_session');
            if (session) {
                const sessionData = JSON.parse(session);
                if (sessionData.expires > Date.now()) {
                    window.location.href = '/heimdall';
                } else {
                    localStorage.removeItem('server_session');
                }
            }
        });
    </script>
</body>
</html>
HTMLEOF

# 13. –°–û–ó–î–ê–ï–ú –í–ï–ë-–ò–ù–¢–ï–†–§–ï–ô–° –î–õ–Ø –°–ú–ï–ù–´ –ü–ê–†–û–õ–Ø
log "üîß –°–æ–∑–¥–∞–µ–º –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è..."

# HTML –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è
cat > /home/$USER/docker/password-manager/index.html << 'PASSWORD_HTML'
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–°–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è - –î–æ–º–∞—à–Ω–∏–π –°–µ—Ä–≤–µ—Ä</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Arial', sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }
        
        .password-container {
            background: white;
            padding: 40px;
            border-radius: 15px;
            box-shadow: 0 15px 35px rgba(0,0,0,0.1);
            width: 100%;
            max-width: 500px;
        }
        
        .logo {
            text-align: center;
            margin-bottom: 30px;
        }
        
        .logo h1 {
            color: #333;
            font-size: 28px;
            margin-bottom: 10px;
        }
        
        .logo p {
            color: #666;
            font-size: 14px;
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 8px;
            color: #333;
            font-weight: bold;
        }
        
        .form-group input {
            width: 100%;
            padding: 12px 15px;
            border: 2px solid #ddd;
            border-radius: 8px;
            font-size: 16px;
            transition: border-color 0.3s;
        }
        
        .form-group input:focus {
            outline: none;
            border-color: #667eea;
        }
        
        .password-strength {
            margin-top: 5px;
            font-size: 12px;
            height: 15px;
        }
        
        .strength-weak { color: #e74c3c; }
        .strength-medium { color: #f39c12; }
        .strength-strong { color: #27ae60; }
        
        .change-btn {
            width: 100%;
            padding: 12px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 16px;
            font-weight: bold;
            cursor: pointer;
            transition: transform 0.2s;
            margin-bottom: 15px;
        }
        
        .change-btn:hover {
            transform: translateY(-2px);
        }
        
        .change-btn:disabled {
            background: #ccc;
            cursor: not-allowed;
            transform: none;
        }
        
        .back-btn {
            width: 100%;
            padding: 10px;
            background: #95a5a6;
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 14px;
            cursor: pointer;
            text-decoration: none;
            display: block;
            text-align: center;
        }
        
        .message {
            padding: 10px;
            border-radius: 5px;
            margin: 15px 0;
            text-align: center;
            display: none;
        }
        
        .success {
            background: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }
        
        .error {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }
        
        .requirements {
            background: #f8f9fa;
            padding: 15px;
            border-radius: 8px;
            margin: 20px 0;
            font-size: 12px;
            color: #666;
        }
        
        .requirements ul {
            list-style: none;
            padding-left: 0;
        }
        
        .requirements li {
            margin: 5px 0;
            padding-left: 20px;
            position: relative;
        }
        
        .requirements li:before {
            content: "‚Ä¢";
            position: absolute;
            left: 8px;
            color: #667eea;
        }
    </style>
</head>
<body>
    <div class="password-container">
        <div class="logo">
            <h1>üîê –°–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è</h1>
            <p>–î–æ–º–∞—à–Ω–∏–π —Å–µ—Ä–≤–µ—Ä - –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</p>
        </div>
        
        <div class="requirements">
            <strong>–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –ø–∞—Ä–æ–ª—é:</strong>
            <ul>
                <li>–ú–∏–Ω–∏–º—É–º 8 —Å–∏–º–≤–æ–ª–æ–≤</li>
                <li>–ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–æ—Å—Ç—ã–µ –ø–∞—Ä–æ–ª–∏</li>
                <li>–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã –∏ —Å–∏–º–≤–æ–ª—ã</li>
            </ul>
        </div>
        
        <form id="passwordForm">
            <div class="form-group">
                <label for="currentPassword">–¢–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å:</label>
                <input type="password" id="currentPassword" placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å" required>
            </div>
            
            <div class="form-group">
                <label for="newPassword">–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å:</label>
                <input type="password" id="newPassword" placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å" required>
                <div class="password-strength" id="passwordStrength"></div>
            </div>
            
            <div class="form-group">
                <label for="confirmPassword">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å:</label>
                <input type="password" id="confirmPassword" placeholder="–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å" required>
            </div>
            
            <button type="submit" class="change-btn" id="changeBtn">–°–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å</button>
            
            <div class="message success" id="successMessage">
                ‚úÖ –ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω!
            </div>
            
            <div class="message error" id="errorMessage">
                ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ –ø–∞—Ä–æ–ª—è
            </div>
        </form>
        
        <a href="/heimdall" class="back-btn">‚Üê –ù–∞–∑–∞–¥ –∫ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</a>
    </div>

    <script>
        // –≠–ª–µ–º–µ–Ω—Ç—ã DOM
        const form = document.getElementById('passwordForm');
        const currentPassword = document.getElementById('currentPassword');
        const newPassword = document.getElementById('newPassword');
        const confirmPassword = document.getElementById('confirmPassword');
        const changeBtn = document.getElementById('changeBtn');
        const successMessage = document.getElementById('successMessage');
        const errorMessage = document.getElementById('errorMessage');
        const passwordStrength = document.getElementById('passwordStrength');
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø–∞—Ä–æ–ª—è
        newPassword.addEventListener('input', function() {
            const password = this.value;
            let strength = '';
            let strengthClass = '';
            
            if (password.length === 0) {
                strength = '';
            } else if (password.length < 6) {
                strength = '–°–ª–∞–±—ã–π';
                strengthClass = 'strength-weak';
            } else if (password.length < 10) {
                strength = '–°—Ä–µ–¥–Ω–∏–π';
                strengthClass = 'strength-medium';
            } else {
                strength = '–°–∏–ª—å–Ω—ã–π';
                strengthClass = 'strength-strong';
            }
            
            passwordStrength.textContent = strength;
            passwordStrength.className = 'password-strength ' + strengthClass;
        });
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –ø–∞—Ä–æ–ª–µ–π
        confirmPassword.addEventListener('input', function() {
            if (newPassword.value !== this.value) {
                this.style.borderColor = '#e74c3c';
            } else {
                this.style.borderColor = '#27ae60';
            }
        });
        
        // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã
        form.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            // –í–∞–ª–∏–¥–∞—Ü–∏—è
            if (newPassword.value.length < 4) {
                showMessage('–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 4 —Å–∏–º–≤–æ–ª–∞', 'error');
                return;
            }
            
            if (newPassword.value !== confirmPassword.value) {
                showMessage('–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç', 'error');
                return;
            }
            
            // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
            changeBtn.disabled = true;
            changeBtn.textContent = '–ú–µ–Ω—è–µ–º –ø–∞—Ä–æ–ª—å...';
            
            try {
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–º–µ–Ω—É –ø–∞—Ä–æ–ª—è
                const response = await fetch('/change-password', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        currentPassword: currentPassword.value,
                        newPassword: newPassword.value
                    })
                });
                
                const result = await response.json();
                
                if (result.success) {
                    showMessage('–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω!', 'success');
                    form.reset();
                    passwordStrength.textContent = '';
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
                    setTimeout(() => {
                        window.location.href = '/heimdall';
                    }, 2000);
                } else {
                    showMessage(result.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ –ø–∞—Ä–æ–ª—è', 'error');
                }
            } catch (error) {
                showMessage('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏: ' + error.message, 'error');
            } finally {
                // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
                changeBtn.disabled = false;
                changeBtn.textContent = '–°–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å';
            }
        });
        
        function showMessage(text, type) {
            if (type === 'success') {
                successMessage.textContent = text;
                successMessage.style.display = 'block';
                errorMessage.style.display = 'none';
            } else {
                errorMessage.textContent = text;
                errorMessage.style.display = 'block';
                successMessage.style.display = 'none';
            }
            
            // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
            setTimeout(() => {
                successMessage.style.display = 'none';
                errorMessage.style.display = 'none';
            }, 5000);
        }
    </script>
</body>
</html>
PASSWORD_HTML

# –°–æ–∑–¥–∞–µ–º backend –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è
cat > /home/$USER/docker/password-manager/server.py << 'PYTHON_EOF'
#!/usr/bin/env python3
from http.server import HTTPServer, BaseHTTPRequestHandler
import json
import os
import subprocess
import hashlib
import urllib.parse

USERNAME = os.getenv('USER', 'ubuntu')
SERVER_IP = subprocess.getoutput("hostname -I | awk '{print $1}'")

class PasswordHandler(BaseHTTPRequestHandler):
    def do_GET(self):
        if self.path == '/':
            # Serve the password change page
            with open('/app/index.html', 'rb') as f:
                content = f.read()
            self.send_response(200)
            self.send_header('Content-Type', 'text/html; charset=utf-8')
            self.end_headers()
            self.wfile.write(content)
        else:
            self.send_error(404)
    
    def do_POST(self):
        if self.path == '/change-password':
            content_length = int(self.headers['Content-Length'])
            post_data = self.rfile.read(content_length)
            data = json.loads(post_data.decode('utf-8'))
            
            current_password = data.get('currentPassword', '')
            new_password = data.get('newPassword', '')
            
            # Simple password verification (replace with your actual verification)
            if self.verify_current_password(current_password) and len(new_password) >= 4:
                success = self.change_password(new_password)
                if success:
                    response = {
                        'success': True,
                        'message': '–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω!'
                    }
                else:
                    response = {
                        'success': False,
                        'message': '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–∞—Ä–æ–ª—è'
                    }
            else:
                response = {
                    'success': False,
                    'message': '–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å –∏–ª–∏ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π'
                }
            
            self.send_response(200)
            self.send_header('Content-Type', 'application/json; charset=utf-8')
            self.end_headers()
            self.wfile.write(json.dumps(response).encode('utf-8'))
        else:
            self.send_error(404)
    
    def verify_current_password(self, password):
        """Verify current password (simple implementation)"""
        # Read current password from homepage file
        try:
            with open(f'/home/{USERNAME}/docker/homepage/index.html', 'r') as f:
                content = f.read()
                # Extract password from JavaScript code
                if f"password === '{password}'" in content:
                    return True
        except:
            pass
        return False
    
    def change_password(self, new_password):
        """Change password in all required places"""
        try:
            # Update homepage login page
            homepage_file = f'/home/{USERNAME}/docker/homepage/index.html'
            with open(homepage_file, 'r') as f:
                content = f.read()
            
            # Replace password in JavaScript check
            import re
            new_content = re.sub(
                r"password === '[^']*'", 
                f"password === '{new_password}'", 
                content
            )
            
            with open(homepage_file, 'w') as f:
                f.write(new_content)
            
            # Update accounts file
            accounts_file = f'/home/{USERNAME}/accounts.txt'
            if os.path.exists(accounts_file):
                with open(accounts_file, 'r') as f:
                    content = f.read()
                
                new_content = re.sub(
                    r'–ü–∞—Ä–æ–ª—å: [^\n]*',
                    f'–ü–∞—Ä–æ–ª—å: {new_password}',
                    content
                )
                
                with open(accounts_file, 'w') as f:
                    f.write(new_content)
            
            # Restart homepage container
            subprocess.run(['docker', 'restart', 'homepage'], check=True)
            
            return True
        except Exception as e:
            print(f"Error changing password: {e}")
            return False
    
    def log_message(self, format, *args):
        # Disable default logging
        pass

def run_server():
    port = 8089
    server = HTTPServer(('0.0.0.0', port), PasswordHandler)
    print(f'Password manager server running on port {port}')
    server.serve_forever()

if __name__ == '__main__':
    run_server()
PYTHON_EOF

# –°–æ–∑–¥–∞–µ–º Dockerfile –¥–ª—è password-manager
cat > /home/$USER/docker/password-manager/Dockerfile << 'DOCKERFILE_EOF'
FROM python:3.9-alpine

WORKDIR /app

COPY index.html .
COPY server.py .

RUN apk add --no-cache docker

EXPOSE 8089

CMD ["python", "server.py"]
DOCKERFILE_EOF

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã —Å –Ω–æ–≤—ã–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–º
cd /home/$USER/docker
docker-compose up -d --build password-manager

# 14. –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê HEIMDALL –° –ü–û–ò–°–ö–û–ú –ò –°–ú–ï–ù–û–ô –ü–ê–†–û–õ–Ø
log "üè† –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Heimdall —Å –ø–æ–∏—Å–∫–æ–º –Ø–Ω–¥–µ–∫—Å–∞ –∏ —Å–º–µ–Ω–æ–π –ø–∞—Ä–æ–ª—è..."

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
sleep 30

# –°–æ–∑–¥–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É –¥–ª—è Heimdall
cat > /home/$USER/scripts/setup-heimdall.sh << 'HEIMDALL_EOF'
#!/bin/bash

USERNAME=$(whoami)
SERVER_IP=$(hostname -I | awk '{print $1}')

echo "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Heimdall —Å –ø–æ–∏—Å–∫–æ–º –Ø–Ω–¥–µ–∫—Å–∞ –∏ —Å–º–µ–Ω–æ–π –ø–∞—Ä–æ–ª—è..."

# –ñ–¥–µ–º –ø–æ–ª–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ Heimdall
sleep 20

# –°–æ–∑–¥–∞–µ–º apps.json –¥–ª—è Heimdall —Å –ø–æ–∏—Å–∫–æ–º –Ø–Ω–¥–µ–∫—Å–∞ –∏ —Å–º–µ–Ω–æ–π –ø–∞—Ä–æ–ª—è
cat > /home/$USERNAME/docker/heimdall/apps.json << 'APPS_EOF'
[
    {
        "name": "üîç –Ø–Ω–¥–µ–∫—Å –ü–æ–∏—Å–∫",
        "color": "#FF0000",
        "icon": "fab fa-yandex",
        "link": "https://yandex.ru",
        "description": "–ü–æ–∏—Å–∫ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ —á–µ—Ä–µ–∑ –Ø–Ω–¥–µ–∫—Å",
        "type": 1
    },
    {
        "name": "üîê –°–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è",
        "color": "#FF6B35",
        "icon": "fas fa-key",
        "link": "http://SERVER_IP:8089",
        "description": "–ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
        "type": 1
    },
    {
        "name": "üé¨ Jellyfin",
        "color": "#00AAFF",
        "icon": "fas fa-play-circle",
        "link": "http://SERVER_IP:8096",
        "description": "–ú–µ–¥–∏–∞—Å–µ—Ä–≤–µ—Ä —Å —Ñ–∏–ª—å–º–∞–º–∏ –∏ —Å–µ—Ä–∏–∞–ª–∞–º–∏"
    },
    {
        "name": "üîç –ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤",
        "color": "#FF6B00", 
        "icon": "fas fa-search",
        "link": "http://SERVER_IP:5055",
        "description": "Overseerr - –ø–æ–∏—Å–∫ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞"
    },
    {
        "name": "‚òÅÔ∏è Nextcloud",
        "color": "#0082C9",
        "icon": "fas fa-cloud",
        "link": "http://SERVER_IP/nextcloud",
        "description": "–§–∞–π–ª–æ–≤–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ"
    },
    {
        "name": "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥",
        "color": "#4CAF50",
        "icon": "fas fa-chart-bar",
        "link": "http://SERVER_IP:3001",
        "description": "Uptime Kuma - –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–µ—Ä–≤–∏—Å–æ–≤"
    },
    {
        "name": "üîê –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–∞—Ä–æ–ª–µ–π",
        "color": "#CD5C5C",
        "icon": "fas fa-lock",
        "link": "http://SERVER_IP:8000",
        "description": "Vaultwarden - –º–µ–Ω–µ–¥–∂–µ—Ä –ø–∞—Ä–æ–ª–µ–π"
    },
    {
        "name": "ü§ñ AI –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç",
        "color": "#8A2BE2",
        "icon": "fas fa-robot",
        "link": "http://SERVER_IP:11434",
        "description": "Ollama - –ª–æ–∫–∞–ª—å–Ω–∞—è –Ω–µ–π—Ä–æ—Å–µ—Ç—å"
    },
    {
        "name": "üåÄ –¢–æ—Ä—Ä–µ–Ω—Ç—ã",
        "color": "#FFD700",
        "icon": "fas fa-download",
        "link": "http://SERVER_IP:8080",
        "description": "Tribler - —Ç–æ—Ä—Ä–µ–Ω—Ç-–∫–ª–∏–µ–Ω—Ç"
    },
    {
        "name": "üéØ Jackett",
        "color": "#32CD32",
        "icon": "fas fa-search-plus",
        "link": "http://SERVER_IP:9117",
        "description": "–ü–æ–∏—Å–∫ –ø–æ —Ç—Ä–µ–∫–µ—Ä–∞–º"
    }
]
APPS_EOF

# –ó–∞–º–µ–Ω—è–µ–º SERVER_IP –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π IP
sed -i "s/SERVER_IP/$SERVER_IP/g" /home/$USERNAME/docker/heimdall/apps.json

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º Heimdall –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
docker restart heimdall

echo "Heimdall –Ω–∞—Å—Ç—Ä–æ–µ–Ω —Å –Ø–Ω–¥–µ–∫—Å –ø–æ–∏—Å–∫–æ–º –∏ —Å–º–µ–Ω–æ–π –ø–∞—Ä–æ–ª—è!"
HEIMDALL_EOF

chmod +x /home/$USER/scripts/setup-heimdall.sh
nohup /home/$USER/scripts/setup-heimdall.sh > /dev/null 2>&1 &

# 15. –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê –£–ß–ï–¢–ù–´–• –ó–ê–ü–ò–°–ï–ô
log "üë§ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —É—á–µ—Ç–Ω—ã–µ –∑–∞–ø–∏—Å–∏ (admin/homeserver)..."

cat > /home/$USER/scripts/setup-accounts.sh << 'ACCOUNTS_EOF'
#!/bin/bash

echo "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —É—á–µ—Ç–Ω—ã–µ –∑–∞–ø–∏—Å–∏..."

# –ñ–¥–µ–º –ø–æ–ª–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
sleep 60

# –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å —É—á–µ—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
cat > /home/$USER/accounts.txt << 'ACCEOF'
=== –£–ß–ï–¢–ù–´–ï –ó–ê–ü–ò–°–ò –î–û–ú–ê–®–ù–ï–ì–û –°–ï–†–í–ï–†–ê ===

–î–ê–ù–ù–´–ï –î–õ–Ø –í–•–û–î–ê –í –°–ò–°–¢–ï–ú–£:
–õ–æ–≥–∏–Ω: admin
–ü–∞—Ä–æ–ª—å: homeserver

=== –ö–ê–ö –ü–û–ú–ï–ù–Ø–¢–¨ –ü–ê–†–û–õ–¨ ===
1. –í Heimdall –Ω–∞–∂–º–∏—Ç–µ –∏–∫–æ–Ω–∫—É "üîê –°–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è"
2. –ò–ª–∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ: http://SERVER_IP:8089
3. –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å –∏ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å

=== –î–û–°–¢–£–ü –ö –°–ï–†–í–ò–°–ê–ú ===

üè† –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (–≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É):
http://SERVER_IP:8088
–ò–õ–ò
https://DOMAIN.duckdns.org:8088
–õ–æ–≥–∏–Ω: admin
–ü–∞—Ä–æ–ª—å: homeserver

üè† Heimdall (–ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è):
http://SERVER_IP:80
–ü–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ

üé¨ Jellyfin (–º–µ–¥–∏–∞—Å–µ—Ä–≤–µ—Ä):
http://SERVER_IP:8096
–ü—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—Ö–æ–¥–µ —Å–æ–∑–¥–∞–π—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
- –ò–º—è: admin
- –ü–∞—Ä–æ–ª—å: homeserver

‚òÅÔ∏è Nextcloud (—Ñ–∞–π–ª–æ–≤–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ):
http://SERVER_IP/nextcloud  
–ü—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—Ö–æ–¥–µ:
- –õ–æ–≥–∏–Ω: admin
- –ü–∞—Ä–æ–ª—å: homeserver
- –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: MySQL
  - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ë–î: nextclouduser
  - –ü–∞—Ä–æ–ª—å –ë–î: homeserver
  - –ò–º—è –ë–î: nextcloud
  - –•–æ—Å—Ç: localhost

üîê Vaultwarden (–º–µ–Ω–µ–¥–∂–µ—Ä –ø–∞—Ä–æ–ª–µ–π):
http://SERVER_IP:8000
–ù–∞–∂–º–∏—Ç–µ "Create account":
- Email: admin@localhost
- –ü–∞—Ä–æ–ª—å: homeserver

üîç Overseerr (–ø–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤):
http://SERVER_IP:5055
–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Jellyfin:
- URL: http://jellyfin:8096
- –õ–æ–≥–∏–Ω: admin  
- –ü–∞—Ä–æ–ª—å: homeserver

üìä Uptime Kuma (–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥):
http://SERVER_IP:3001
–ü—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—Ö–æ–¥–µ —Å–æ–∑–¥–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å: homeserver

ü§ñ Ollama (–Ω–µ–π—Ä–æ—Å–µ—Ç—å):
http://SERVER_IP:11434
–î–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑ API, –ø–∞—Ä–æ–ª—å –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è

üîç –Ø–Ω–¥–µ–∫—Å –ü–æ–∏—Å–∫:
–î–æ—Å—Ç—É–ø–µ–Ω –ø—Ä—è–º–æ –∏–∑ Heimdall

üîê –°–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è:
http://SERVER_IP:8089
–ò–∑–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

=== –í–ê–ñ–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø ===
1. –°–Ω–∞—á–∞–ª–∞ –∑–∞–π–¥–∏—Ç–µ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É (–ø–æ—Ä—Ç 8088)
2. –í–æ–π–¥–∏—Ç–µ —Å –ª–æ–≥–∏–Ω–æ–º admin –∏ –ø–∞—Ä–æ–ª–µ–º homeserver
3. –í—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Heimdall
4. –û—Ç—Ç—É–¥–∞ –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ–¥–Ω–∏–º –∫–ª–∏–∫–æ–º
5. –î–ª—è —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–∫–æ–Ω–∫—É "üîê –°–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è"
ACCEOF

# –ó–∞–º–µ–Ω—è–µ–º SERVER_IP –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π IP –∏ DOMAIN
SERVER_IP=$(hostname -I | awk '{print $1}')
DOMAIN="domenforserver123"
sed -i "s/SERVER_IP/$SERVER_IP/g" /home/$USER/accounts.txt
sed -i "s/DOMAIN/$DOMAIN/g" /home/$USER/accounts.txt

echo "–£—á–µ—Ç–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!"
echo "–§–∞–π–ª —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏: /home/$USER/accounts.txt"
ACCOUNTS_EOF

chmod +x /home/$USER/scripts/setup-accounts.sh
nohup /home/$USER/scripts/setup-accounts.sh > /dev/null 2>&1 &

# 16. –§–ò–ù–ê–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø
echo ""
echo "=========================================="
echo "üéâ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!"
echo "=========================================="
echo ""
echo "üåê –í–ê–® –î–û–ú–ï–ù: https://$DUCKDNS_URL"
echo ""
echo "üîê –°–ò–°–¢–ï–ú–ê –î–û–°–¢–£–ü–ê:"
echo "üè† –ì–õ–ê–í–ù–ê–Ø –°–¢–†–ê–ù–ò–¶–ê –í–•–û–î–ê: http://$SERVER_IP:8088"
echo "   –ò–õ–ò https://$DUCKDNS_URL:8088"
echo ""
echo "üë§ –î–ê–ù–ù–´–ï –î–õ–Ø –í–•–û–î–ê:"
echo "   –õ–æ–≥–∏–Ω: admin"
echo "   –ü–∞—Ä–æ–ª—å: homeserver"
echo ""
echo "üîß –í–û–ó–ú–û–ñ–ù–û–°–¢–ò:"
echo "   ‚úÖ –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è"
echo "   ‚úÖ –Ø–Ω–¥–µ–∫—Å –ø–æ–∏—Å–∫ –∏–∑ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
echo "   ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ IP"
echo "   ‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –≤ –æ–¥–Ω–æ–π —Å–µ—Ç–∏"
echo ""
echo "üìä –û–°–ù–û–í–ù–´–ï –°–ï–†–í–ò–°–´:"
echo "üè† –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è: http://$DUCKDNS_URL (–ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)"
echo "üé¨ Jellyfin (–º–µ–¥–∏–∞): http://$DUCKDNS_URL:8096"
echo "üîç –ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤: http://$DUCKDNS_URL:5055"
echo "‚òÅÔ∏è Nextcloud (—Ñ–∞–π–ª—ã): http://$DUCKDNS_URL/nextcloud"
echo "üîê –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–∞—Ä–æ–ª–µ–π: http://$DUCKDNS_URL:8000"
echo "ü§ñ –ù–µ–π—Ä–æ—Å–µ—Ç—å: http://$DUCKDNS_URL:11434"
echo "üîß –°–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è: http://$DUCKDNS_URL:8089"
echo ""
echo "‚ö° –ö–ê–ö –ù–ê–ß–ê–¢–¨:"
echo "1. –û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ: http://$SERVER_IP:8088"
echo "2. –í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω: admin, –ø–∞—Ä–æ–ª—å: homeserver"
echo "3. –í—ã –ø–æ–ø–∞–¥–µ—Ç–µ –≤ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Heimdall"
echo "4. –û—Ç—Ç—É–¥–∞ –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ–¥–Ω–∏–º –∫–ª–∏–∫–æ–º"
echo "5. –î–ª—è —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è –Ω–∞–∂–º–∏—Ç–µ –∏–∫–æ–Ω–∫—É 'üîê –°–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è'"
echo ""
echo "üìã –ü–û–õ–ù–ê–Ø –ò–ù–°–¢–†–£–ö–¶–ò–Ø:"
echo "–§–∞–π–ª —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏: /home/$USER/accounts.txt"
echo ""
echo "üöÄ –ì–æ—Ç–æ–≤–æ! –í–∞—à –¥–æ–º–∞—à–Ω–∏–π —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω —Å —Å–∏—Å—Ç–µ–º–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏ —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è!"
echo "=========================================="
