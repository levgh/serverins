#!/bin/bash

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
DOMAIN="domenforserver123"
TOKEN="7c4ac80c-d14f-4ca6-ae8c-df2b04a939ae"
CURRENT_USER=$(whoami)
SERVER_IP=$(hostname -I | awk '{print $1}')
DUCKDNS_URL="$DOMAIN.duckdns.org"

echo "=========================================="
echo "üöÄ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –£–°–¢–ê–ù–û–í–ö–ê –î–û–ú–ê–®–ù–ï–ì–û –°–ï–†–í–ï–†–ê"
echo "=========================================="

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo "[$(date '+%H:%M:%S')] $1"
}

# 1. –û–ë–ù–û–í–õ–ï–ù–ò–ï –°–ò–°–¢–ï–ú–´
log "üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
sudo apt update && sudo apt upgrade -y

# 2. –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô
log "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤..."
sudo apt install -y \
  curl wget git \
  docker.io docker-compose \
  apache2 mysql-server \
  php php-curl php-gd php-mysql php-xml php-zip php-mbstring php-intl \
  cron nano htop tree unzip net-tools wireguard \
  ffmpeg imagemagick jpegoptim optipng pngquant webp

# 3. –ù–ê–°–¢–†–û–ô–ö–ê DOCKER
log "üê≥ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Docker..."
sudo systemctl enable docker
sudo systemctl start docker
sudo usermod -aG docker "$CURRENT_USER"
newgrp docker << EOF
EOF

# 4. –ù–ê–°–¢–†–û–ô–ö–ê –ß–ê–°–û–í–û–ì–û –ü–û–Ø–°–ê
log "‚è∞ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—Ä–µ–º–µ–Ω–∏..."
sudo timedatectl set-timezone Europe/Moscow

# 5. –ù–ê–°–¢–†–û–ô–ö–ê DUCKDNS
log "üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ DuckDNS..."
mkdir -p "/home/$CURRENT_USER/scripts"

cat > "/home/$CURRENT_USER/scripts/duckdns-update.sh" << EOF
#!/bin/bash
DOMAIN="$DOMAIN"
TOKEN="$TOKEN"
URL="https://www.duckdns.org/update?domains=\${DOMAIN}&token=\${TOKEN}&ip="
response=\$(curl -s -w "\n%{http_code}" "\$URL")
http_code=\$(echo "\$response" | tail -n1)
content=\$(echo "\$response" | head -n1)
echo "\$(date): HTTP \$http_code - \$content" >> "/home/$CURRENT_USER/scripts/duckdns.log"
EOF

chmod +x "/home/$CURRENT_USER/scripts/duckdns-update.sh"

# –î–æ–±–∞–≤–ª—è–µ–º –≤ Cron
(crontab -l 2>/dev/null; echo "*/5 * * * * /home/$CURRENT_USER/scripts/duckdns-update.sh") | crontab -
"/home/$CURRENT_USER/scripts/duckdns-update.sh"

# 6. –ù–ê–°–¢–†–û–ô–ö–ê –°–¢–ê–¢–ò–ß–ï–°–ö–û–ì–û IP
log "üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ IP..."
INTERFACE_NAME=$(ip route | grep default | awk '{print $5}' | head -1)
GATEWAY_IP=$(ip route | grep default | awk '{print $3}' | head -1)

sudo tee /etc/netplan/01-netcfg.yaml > /dev/null << EOF
network:
  version: 2
  renderer: networkd
  ethernets:
    $INTERFACE_NAME:
      dhcp4: no
      addresses: [$SERVER_IP/24]
      gateway4: $GATEWAY_IP
      nameservers:
        addresses: [8.8.8.8, 1.1.1.1]
EOF

sudo netplan apply

# 7. –ù–ê–°–¢–†–û–ô–ö–ê –°–û–ë–°–¢–í–ï–ù–ù–û–ì–û VPN (HIDDIFY/WIREGUARD)
log "üîí –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ VPN..."
mkdir -p "/home/$CURRENT_USER/vpn"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ WireGuard
sudo apt install -y wireguard resolvconf

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–µ–π
cd "/home/$CURRENT_USER/vpn" || exit
wg genkey | sudo tee /etc/wireguard/private.key
sudo chmod 600 /etc/wireguard/private.key
sudo cat /etc/wireguard/private.key | wg pubkey | sudo tee /etc/wireguard/public.key

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ WireGuard —Å —Å–ª—É—á–∞–π–Ω—ã–º–∏ –ø–æ—Ä—Ç–∞–º–∏
VPN_PORT=$((RANDOM % 10000 + 20000))
sudo tee /etc/wireguard/wg0.conf > /dev/null << EOF
[Interface]
PrivateKey = $(sudo cat /etc/wireguard/private.key)
Address = 10.0.0.1/24
ListenPort = $VPN_PORT
SaveConfig = true
PostUp = iptables -A FORWARD -i wg0 -j ACCEPT; iptables -t nat -A POSTROUTING -o $INTERFACE_NAME -j MASQUERADE
PostDown = iptables -D FORWARD -i wg0 -j ACCEPT; iptables -t nat -D POSTROUTING -o $INTERFACE_NAME -j MASQUERADE

[Peer]
PublicKey = $(cat /etc/wireguard/public.key)
AllowedIPs = 10.0.0.2/32
EOF

# –í–∫–ª—é—á–µ–Ω–∏–µ IP forwarding
echo 'net.ipv4.ip_forward=1' | sudo tee -a /etc/sysctl.conf
sudo sysctl -p

# –ó–∞–ø—É—Å–∫ WireGuard
sudo systemctl enable wg-quick@wg0
sudo systemctl start wg-quick@wg0

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞ –¥–ª—è Hiddify
sudo tee "/home/$CURRENT_USER/vpn/hiddify-client.conf" > /dev/null << EOF
[Interface]
PrivateKey = $(wg genkey)
Address = 10.0.0.2/32
DNS = 8.8.8.8, 1.1.1.1

[Peer]
PublicKey = $(sudo cat /etc/wireguard/public.key)
Endpoint = $SERVER_IP:$VPN_PORT
AllowedIPs = 0.0.0.0/0
EOF

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è —Å–º–µ–Ω—ã –ø–æ—Ä—Ç–æ–≤ VPN
cat > "/home/$CURRENT_USER/scripts/change-vpn-port.sh" << 'EOF'
#!/bin/bash
USER_HOME=$(getent passwd "$(whoami)" | cut -d: -f6)
NEW_PORT=$((RANDOM % 10000 + 20000))
sudo sed -i "s/ListenPort = [0-9]*/ListenPort = $NEW_PORT/" /etc/wireguard/wg0.conf
sudo systemctl restart wg-quick@wg0
echo "VPN –ø–æ—Ä—Ç –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: $NEW_PORT"
echo "$(date): VPN –ø–æ—Ä—Ç –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ $NEW_PORT" >> "$USER_HOME/vpn/port-changes.log"
EOF

chmod +x "/home/$CURRENT_USER/scripts/change-vpn-port.sh"

# –î–æ–±–∞–≤–ª—è–µ–º —Å–º–µ–Ω—É –ø–æ—Ä—Ç–æ–≤ –≤ cron (–∫–∞–∂–¥—ã–µ 24 —á–∞—Å–∞)
(crontab -l 2>/dev/null; echo "0 0 * * * /home/$CURRENT_USER/scripts/change-vpn-port.sh") | crontab -

# 8. –°–ò–°–¢–ï–ú–ê –°–ú–ï–ù–´ –ü–ê–†–û–õ–Ø –î–õ–Ø –ï–î–ò–ù–û–ô –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò
log "üîë –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è –µ–¥–∏–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏..."

# –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
mkdir -p "/home/$CURRENT_USER/docker/homepage"
cat > "/home/$CURRENT_USER/docker/homepage/auth-data.json" << 'EOF'
{
    "username": "admin",
    "password": "homeserver"
}
EOF

cat > "/home/$CURRENT_USER/scripts/change-auth-password.sh" << 'EOF'
#!/bin/bash
CURRENT_USERNAME=$(whoami)
USER_HOME=$(getent passwd "$CURRENT_USERNAME" | cut -d: -f6)
AUTH_FILE="$USER_HOME/docker/homepage/auth-data.json"

echo "=== –°–ò–°–¢–ï–ú–ê –°–ú–ï–ù–´ –ü–ê–†–û–õ–Ø –ï–î–ò–ù–û–ô –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò ==="
read -r -s -p "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å: " CURRENT_PASS
echo
read -r -s -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å: " NEW_PASS
echo
read -r -s -p "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å: " NEW_PASS_CONFIRM
echo

if [ "$NEW_PASS" != "$NEW_PASS_CONFIRM" ]; then
    echo "‚ùå –ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç!"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ –ø–∞—Ä–æ–ª—è –∏–∑ —Ñ–∞–π–ª–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
CURRENT_AUTH_PASS=$(jq -r '.password' "$AUTH_FILE" 2>/dev/null)
if [ "$CURRENT_PASS" != "$CURRENT_AUTH_PASS" ] && [ "$CURRENT_PASS" != "homeserver" ]; then
    echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å!"
    exit 1
fi

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –≤ —Ñ–∞–π–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
jq --arg newpass "$NEW_PASS" '.password = $newpass' "$AUTH_FILE" > "$AUTH_FILE.tmp" && mv "$AUTH_FILE.tmp" "$AUTH_FILE"

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –≤ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
sed -i "s/homeserver/$NEW_PASS/g" "$USER_HOME/docker/homepage/index.html" 2>/dev/null

echo "‚úÖ –ü–∞—Ä–æ–ª—å –µ–¥–∏–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω!"
echo "üîê –ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –¥–ª—è –≤—Ö–æ–¥–∞ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É: $NEW_PASS"
EOF

chmod +x "/home/$CURRENT_USER/scripts/change-auth-password.sh"

# –°–æ–∑–¥–∞–Ω–∏–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –¥–ª—è —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
cat > "/home/$CURRENT_USER/docker/password-change/index.html" << 'HTML_EOF'
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–°–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏</title>
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { 
            font-family: Arial, sans-serif; 
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .container {
            background: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 10px 25px rgba(0,0,0,0.2);
            width: 100%;
            max-width: 400px;
        }
        h2 { text-align: center; margin-bottom: 20px; color: #333; }
        .form-group { margin-bottom: 15px; }
        label { display: block; margin-bottom: 5px; color: #555; }
        input { 
            width: 100%; 
            padding: 10px; 
            border: 1px solid #ddd; 
            border-radius: 5px; 
            font-size: 16px;
        }
        button { 
            width: 100%; 
            padding: 12px; 
            background: #667eea; 
            color: white; 
            border: none; 
            border-radius: 5px; 
            font-size: 16px; 
            cursor: pointer;
        }
        button:hover { background: #5a6fd8; }
        .message { 
            margin-top: 15px; 
            padding: 10px; 
            border-radius: 5px; 
            text-align: center; 
            display: none;
        }
        .success { background: #d4edda; color: #155724; }
        .error { background: #f8d7da; color: #721c24; }
        .back-link {
            text-align: center;
            margin-top: 15px;
        }
        .back-link a {
            color: #667eea;
            text-decoration: none;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>üîê –°–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏</h2>
        <p style="text-align: center; color: #666; margin-bottom: 20px; font-size: 14px;">
            –ò–∑–º–µ–Ω—è–µ—Ç –ø–∞—Ä–æ–ª—å —Ç–æ–ª—å–∫–æ –¥–ª—è –≤—Ö–æ–¥–∞ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        </p>
        <form id="passwordForm">
            <div class="form-group">
                <label>–¢–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å:</label>
                <input type="password" id="currentPassword" required>
            </div>
            <div class="form-group">
                <label>–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å:</label>
                <input type="password" id="newPassword" required>
            </div>
            <div class="form-group">
                <label>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å:</label>
                <input type="password" id="confirmPassword" required>
            </div>
            <button type="submit">–°–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏</button>
        </form>
        <div class="back-link">
            <a href="/">‚Üê –ù–∞–∑–∞–¥ –∫ –≤—Ö–æ–¥—É</a>
        </div>
        <div id="message" class="message"></div>
    </div>

    <script>
        document.getElementById('passwordForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const currentPass = document.getElementById('currentPassword').value;
            const newPass = document.getElementById('newPassword').value;
            const confirmPass = document.getElementById('confirmPassword').value;
            const message = document.getElementById('message');
            
            if (newPass !== confirmPass) {
                message.textContent = '‚ùå –ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç!';
                message.className = 'message error';
                message.style.display = 'block';
                return;
            }
            
            fetch('/change-auth-password', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    currentPassword: currentPass,
                    newPassword: newPass
                })
            })
            .then(response => response.json())
            .then(data => {
                message.textContent = data.message;
                message.className = data.success ? 'message success' : 'message error';
                message.style.display = 'block';
                
                if (data.success) {
                    document.getElementById('passwordForm').reset();
                    setTimeout(() => {
                        window.location.href = '/';
                    }, 2000);
                }
            })
            .catch(error => {
                message.textContent = '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ –ø–∞—Ä–æ–ª—è';
                message.className = 'message error';
                message.style.display = 'block';
            });
        });
    </script>
</body>
</html>
HTML_EOF

# 9. –°–ò–°–¢–ï–ú–ê –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ì–û –°–ö–ê–ß–ò–í–ê–ù–ò–Ø –§–ò–õ–¨–ú–û–í –î–õ–Ø JELLYFIN
log "üé¨ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∏–ª—å–º–æ–≤..."

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
mkdir -p "/home/$CURRENT_USER/docker/{radarr,sonarr,bazarr,qbittorrent}"

cat > "/home/$CURRENT_USER/docker/automation-compose.yml" << 'EOF'
version: '3.8'

networks:
  server-net:
    driver: bridge

services:
  # Radarr - –¥–ª—è —Ñ–∏–ª—å–º–æ–≤
  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    ports:
      - "7878:7878"
    volumes:
      - /home/$CURRENT_USER/docker/radarr:/config
      - /home/$CURRENT_USER/media/movies:/movies
      - /home/$CURRENT_USER/media/streaming:/downloads
    environment:
      - TZ=Europe/Moscow
      - PUID=1000
      - PGID=1000
    networks:
      - server-net

  # Sonarr - –¥–ª—è —Å–µ—Ä–∏–∞–ª–æ–≤
  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    ports:
      - "8989:8989"
    volumes:
      - /home/$CURRENT_USER/docker/sonarr:/config
      - /home/$CURRENT_USER/media/tv:/tv
      - /home/$CURRENT_USER/media/streaming:/downloads
    environment:
      - TZ=Europe/Moscow
      - PUID=1000
      - PGID=1000
    networks:
      - server-net

  # Bazarr - –¥–ª—è —Å—É–±—Ç–∏—Ç—Ä–æ–≤
  bazarr:
    image: linuxserver/bazarr:latest
    container_name: bazarr
    restart: unless-stopped
    ports:
      - "6767:6767"
    volumes:
      - /home/$CURRENT_USER/docker/bazarr:/config
      - /home/$CURRENT_USER/media:/media
    environment:
      - TZ=Europe/Moscow
      - PUID=1000
      - PGID=1000
    networks:
      - server-net

  # qBittorrent - —Ç–æ—Ä—Ä–µ–Ω—Ç-–∫–ª–∏–µ–Ω—Ç
  qbittorrent:
    image: linuxserver/qbittorrent:latest
    container_name: qbittorrent
    restart: unless-stopped
    ports:
      - "8081:8080"
      - "6881:6881"
      - "6881:6881/udp"
    volumes:
      - /home/$CURRENT_USER/docker/qbittorrent:/config
      - /home/$CURRENT_USER/media/streaming:/downloads
    environment:
      - TZ=Europe/Moscow
      - PUID=1000
      - PGID=1000
      - WEBUI_PORT=8080
    networks:
      - server-net
EOF

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
cd "/home/$CURRENT_USER/docker" || exit
docker-compose -f automation-compose.yml up -d

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞ –∏ –∑–∞–≥—Ä—É–∑–∫–∏
cat > "/home/$CURRENT_USER/scripts/jellyfin-autodownload.sh" << 'SCRIPT_EOF'
#!/bin/bash

JELLYFIN_URL="http://localhost:8096"
RADARR_URL="http://localhost:7878"
SONARR_URL="http://localhost:8989"
API_KEY=""

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–∞
search_and_download_movie() {
    local movie_name="$1"
    
    echo "üîç –ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–∞: $movie_name"
    
    # –ü–æ–∏—Å–∫ —á–µ—Ä–µ–∑ Radarr
    local search_result
    search_result=$(curl -s -X POST "$RADARR_URL/api/v3/movie/lookup" \
        -H "X-Api-Key: $API_KEY" \
        -H "Content-Type: application/json" \
        -d "{\"term\": \"$movie_name\"}" | jq -r '.[0]')
    
    if [ "$search_result" != "null" ]; then
        local title year tmdbId
        title=$(echo "$search_result" | jq -r '.title')
        year=$(echo "$search_result" | jq -r '.year')
        tmdbId=$(echo "$search_result" | jq -r '.tmdbId')
        
        echo "üé¨ –ù–∞–π–¥–µ–Ω —Ñ–∏–ª—å–º: $title ($year)"
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ Radarr –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
        curl -s -X POST "$RADARR_URL/api/v3/movie" \
            -H "X-Api-Key: $API_KEY" \
            -H "Content-Type: application/json" \
            -d "{
                \"title\": \"$title\",
                \"year\": $year,
                \"tmdbId\": $tmdbId,
                \"qualityProfileId\": 1,
                \"rootFolderPath\": \"/movies\",
                \"monitored\": true,
                \"addOptions\": {
                    \"searchForMovie\": true
                }
            }"
        
        echo "üì• –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—á–∞—Ç–∞: $title"
        return 0
    else
        echo "‚ùå –§–∏–ª—å–º –Ω–µ –Ω–∞–π–¥–µ–Ω: $movie_name"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤
cleanup_watched_movies() {
    echo "üßπ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤..."
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤ –∏–∑ Jellyfin
    local watched_movies
    watched_movies=$(curl -s "$JELLYFIN_URL/Items" \
        -H "X-MediaBrowser-Token: $API_KEY" \
        -G --data-urlencode "Recursive=true" \
        --data-urlencode "IncludeItemTypes=Movie" \
        --data-urlencode "Filters=IsPlayed" | jq -r '.Items[] | select(.UserData.Played == true) | .Id')
    
    for movie_id in $watched_movies; do
        local movie_name
        movie_name=$(curl -s "$JELLYFIN_URL/Items/$movie_id" \
            -H "X-MediaBrowser-Token: $API_KEY" | jq -r '.Name')
        
        echo "üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ–≥–æ —Ñ–∏–ª—å–º–∞: $movie_name"
        
        # –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ Jellyfin
        curl -s -X DELETE "$JELLYFIN_URL/Items/$movie_id" \
            -H "X-MediaBrowser-Token: $API_KEY"
        
        # –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
        local movie_path="/home/$CURRENT_USER/media/movies/$movie_name"
        if [ -d "$movie_path" ]; then
            rm -rf "$movie_path"
        fi
        
        # –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ Radarr
        local radarr_id
        radarr_id=$(curl -s "$RADARR_URL/api/v3/movie" \
            -H "X-Api-Key: $API_KEY" | jq -r ".[] | select(.title == \"$movie_name\") | .id")
        
        if [ -n "$radarr_id" ]; then
            curl -s -X DELETE "$RADARR_URL/api/v3/movie/$radarr_id" \
                -H "X-Api-Key: $API_KEY" \
                --data-urlencode "deleteFiles=true"
        fi
    done
}

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
while true; do
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ (–º–æ–∂–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Å Overseerr)
    # –û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤
    cleanup_watched_movies
    sleep 300  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
done
SCRIPT_EOF

chmod +x "/home/$CURRENT_USER/scripts/jellyfin-autodownload.sh"

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–ª—É–∂–±—ã –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
sudo tee /etc/systemd/system/jellyfin-autodownload.service > /dev/null << EOF
[Unit]
Description=Jellyfin Auto Download Service
After=network.target

[Service]
Type=simple
User=$CURRENT_USER
ExecStart=/home/$CURRENT_USER/scripts/jellyfin-autodownload.sh
Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
EOF

sudo systemctl daemon-reload
sudo systemctl enable jellyfin-autodownload
sudo systemctl start jellyfin-autodownload

# 10. –°–û–ó–î–ê–ù–ò–ï –ü–ê–ü–û–ö –î–õ–Ø –°–ï–†–í–ò–°–û–í
log "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫..."
mkdir -p "/home/$CURRENT_USER/docker/{jellyfin,tribler,jackett,overseerr,heimdall,uptime-kuma,vaultwarden,homepage}"
mkdir -p "/home/$CURRENT_USER/media/{movies,tv,streaming,music}"
mkdir -p "/home/$CURRENT_USER/backups"

# 11. –û–ë–ù–û–í–õ–ï–ù–ù–´–ô DOCKER-COMPOSE –° –í–°–ï–ú–ò –°–ï–†–í–ò–°–ê–ú–ò
log "üê≥ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."

cat > "/home/$CURRENT_USER/docker/docker-compose.yml" << 'COMPOSE_EOF'
version: '3.8'

networks:
  server-net:
    driver: bridge

services:
  # Jellyfin - –º–µ–¥–∏–∞—Å–µ—Ä–≤–µ—Ä —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
  jellyfin:
    image: jellyfin/jellyfin:latest
    container_name: jellyfin
    restart: unless-stopped
    ports:
      - "8096:8096"
    volumes:
      - /home/$CURRENT_USER/docker/jellyfin:/config
      - /home/$CURRENT_USER/media:/media
      - /home/$CURRENT_USER/media/streaming:/media/streaming
    environment:
      - TZ=Europe/Moscow
      - JELLYFIN_PUBLISHED_SERVER_URL=http://$SERVER_IP:8096
    networks:
      - server-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyfin.rule=Host(\`$DUCKDNS_URL\`) && PathPrefix(\`/jellyfin\`)"

  # Tribler - —Ç–æ—Ä—Ä–µ–Ω—Ç-–∫–ª–∏–µ–Ω—Ç —Å —Å—Ç—Ä–∏–º–∏–Ω–≥–æ–º
  tribler:
    image: tribler/tribler:latest
    container_name: tribler
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - /home/$CURRENT_USER/docker/tribler:/root/.Tribler
      - /home/$CURRENT_USER/media/streaming:/downloads
    environment:
      - TZ=Europe/Moscow
    networks:
      - server-net

  # Jackett - –ø–æ–∏—Å–∫ –ø–æ —Ç—Ä–µ–∫–µ—Ä–∞–º
  jackett:
    image: linuxserver/jackett:latest
    container_name: jackett
    restart: unless-stopped
    ports:
      - "9117:9117"
    volumes:
      - /home/$CURRENT_USER/docker/jackett:/config
      - /home/$CURRENT_USER/media/streaming:/downloads
    environment:
      - TZ=Europe/Moscow
      - PUID=1000
      - PGID=1000
    networks:
      - server-net

  # Overseerr - –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∑–∞–ø—Ä–æ—Å–æ–≤
  overseerr:
    image: linuxserver/overseerr:latest
    container_name: overseerr
    restart: unless-stopped
    ports:
      - "5055:5055"
    volumes:
      - /home/$CURRENT_USER/docker/overseerr:/config
    environment:
      - TZ=Europe/Moscow
      - PUID=1000
      - PGID=1000
    networks:
      - server-net

  # Heimdall - –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å –ø–æ–∏—Å–∫–æ–º
  heimdall:
    image: lscr.io/linuxserver/heimdall:latest
    container_name: heimdall
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - /home/$CURRENT_USER/docker/heimdall:/config
    environment:
      - TZ=Europe/Moscow
      - PUID=1000
      - PGID=1000
    networks:
      - server-net

  # Uptime Kuma - –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
  uptime-kuma:
    image: louislam/uptime-kuma:1
    container_name: uptime-kuma
    restart: unless-stopped
    ports:
      - "3001:3001"
    volumes:
      - /home/$CURRENT_USER/docker/uptime-kuma:/app/data
    environment:
      - TZ=Europe/Moscow
    networks:
      - server-net

  # Vaultwarden - –º–µ–Ω–µ–¥–∂–µ—Ä –ø–∞—Ä–æ–ª–µ–π
  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - /home/$CURRENT_USER/docker/vaultwarden/data:/data
    environment:
      - TZ=Europe/Moscow
      - ADMIN_TOKEN=admin
      - SIGNUPS_ALLOWED=true
    networks:
      - server-net

  # –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π –∏ —Å–º–µ–Ω–æ–π –ø–∞—Ä–æ–ª—è
  homepage:
    image: nginx:alpine
    container_name: homepage
    restart: unless-stopped
    ports:
      - "8088:80"
    volumes:
      - /home/$CURRENT_USER/docker/homepage:/usr/share/nginx/html
      - /home/$CURRENT_USER/docker/password-change:/usr/share/nginx/html/password-change
    networks:
      - server-net

  # Traefik –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –ø–æ –¥–æ–º–µ–Ω—É
  traefik:
    image: traefik:v2.9
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /home/$CURRENT_USER/docker/traefik:/etc/traefik
    command:
      - --api.dashboard=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
    networks:
      - server-net
COMPOSE_EOF

# –ó–∞–º–µ–Ω—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ docker-compose.yml
sed -i "s/\\$CURRENT_USER/$CURRENT_USER/g" "/home/$CURRENT_USER/docker/docker-compose.yml"
sed -i "s/\\$SERVER_IP/$SERVER_IP/g" "/home/$CURRENT_USER/docker/docker-compose.yml"
sed -i "s/\\$DUCKDNS_URL/$DUCKDNS_URL/g" "/home/$CURRENT_USER/docker/docker-compose.yml"

# –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
cd "/home/$CURRENT_USER/docker" || exit
docker-compose up -d

# 12. –ù–ê–°–¢–†–û–ô–ö–ê JELLYFIN –° –ö–ù–û–ü–ö–û–ô –ü–û–ò–°–ö–ê
log "üé¨ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Jellyfin —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∑–∞–≥—Ä—É–∑–∫–æ–π..."

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ CSS –¥–ª—è Jellyfin —Å –∫–Ω–æ–ø–∫–æ–π –ø–æ–∏—Å–∫–∞
mkdir -p "/home/$CURRENT_USER/docker/jellyfin/data/dashboard-ui"
cat > "/home/$CURRENT_USER/docker/jellyfin/data/dashboard-ui/custom.css" << 'CSS_EOF'
/* –ö–∞—Å—Ç–æ–º–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è Jellyfin */
.mainAnimatedPage {
    position: relative;
}

.skinHeader.skinHeader-withBackground {
    background: linear-gradient(135deg, #00a4dc 0%, #0066cc 100%) !important;
}

/* –°—Ç–∏–ª–∏ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤ */
.search-movies-btn {
    background: linear-gradient(135deg, #ff6b00 0%, #ff0000 100%) !important;
    color: white !important;
    border: none !important;
    border-radius: 25px !important;
    padding: 10px 20px !important;
    margin: 10px !important;
    font-weight: bold !important;
    cursor: pointer !important;
    transition: all 0.3s ease !important;
}

.search-movies-btn:hover {
    transform: translateY(-2px) !important;
    box-shadow: 0 5px 15px rgba(255, 107, 0, 0.4) !important;
}

.homeSection .emby-scroller {
    padding-top: 20px;
}
CSS_EOF

# 13. –°–ö–†–ò–ü–¢ –î–õ–Ø –ò–ù–¢–ï–ì–†–ê–¶–ò–ò JELLYFIN –° –ü–û–ò–°–ö–û–ú
cat > "/home/$CURRENT_USER/scripts/jellyfin-search-integration.sh" << 'JELLYFIN_EOF'
#!/bin/bash

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
JELLYFIN_URL="http://localhost:8096"
OVERSEERR_URL="http://localhost:5055"
RADARR_URL="http://localhost:7878"

echo "üé¨ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Jellyfin —Å –ø–æ–∏—Å–∫–æ–º —Ñ–∏–ª—å–º–æ–≤..."

# –°–æ–∑–¥–∞–Ω–∏–µ HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ Jellyfin
cat > "/home/$CURRENT_USER/docker/jellyfin/search-page.html" << 'HTML_EOF'
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>üîç –ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤ - Jellyfin</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%);
            color: white;
            min-height: 100vh;
            padding: 20px;
        }
        
        .search-container {
            max-width: 800px;
            margin: 0 auto;
            padding: 40px 20px;
        }
        
        .search-header {
            text-align: center;
            margin-bottom: 40px;
        }
        
        .search-header h1 {
            font-size: 2.5em;
            margin-bottom: 10px;
            background: linear-gradient(135deg, #00a4dc, #ff6b00);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }
        
        .search-box {
            background: rgba(255, 255, 255, 0.1);
            padding: 30px;
            border-radius: 15px;
            backdrop-filter: blur(10px);
            margin-bottom: 30px;
        }
        
        .search-input {
            width: 100%;
            padding: 15px 20px;
            font-size: 18px;
            border: none;
            border-radius: 50px;
            background: rgba(255, 255, 255, 0.9);
            color: #333;
            margin-bottom: 20px;
        }
        
        .search-button {
            background: linear-gradient(135deg, #ff6b00, #ff0000);
            color: white;
            border: none;
            padding: 15px 30px;
            font-size: 16px;
            border-radius: 50px;
            cursor: pointer;
            transition: transform 0.3s ease;
            font-weight: bold;
        }
        
        .search-button:hover {
            transform: translateY(-2px);
        }
        
        .results {
            display: none;
            margin-top: 30px;
        }
        
        .movie-card {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 20px;
            backdrop-filter: blur(10px);
        }
        
        .movie-title {
            font-size: 1.5em;
            margin-bottom: 10px;
            color: #00a4dc;
        }
        
        .movie-info {
            color: #ccc;
            margin-bottom: 15px;
        }
        
        .download-btn {
            background: linear-gradient(135deg, #00a4dc, #0066cc);
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            margin-right: 10px;
        }
        
        .status {
            margin-top: 20px;
            padding: 15px;
            border-radius: 5px;
            text-align: center;
            display: none;
        }
        
        .success {
            background: rgba(0, 255, 0, 0.2);
            border: 1px solid #00ff00;
        }
        
        .error {
            background: rgba(255, 0, 0, 0.2);
            border: 1px solid #ff0000;
        }
    </style>
</head>
<body>
    <div class="search-container">
        <div class="search-header">
            <h1>üîç –ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤</h1>
            <p>–ù–∞–π–¥–∏—Ç–µ –ª—é–±–æ–π —Ñ–∏–ª—å–º –∏ –Ω–∞—á–Ω–∏—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥</p>
        </div>
        
        <div class="search-box">
            <input type="text" class="search-input" id="searchInput" 
                   placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: –ò–Ω—Ç–µ—Ä—Å—Ç–µ–ª–ª–∞—Ä)" autofocus>
            <button class="search-button" onclick="searchMovie()">üé¨ –ù–∞–π—Ç–∏ –∏ —Å–∫–∞—á–∞—Ç—å</button>
        </div>
        
        <div class="results" id="results">
            <!-- –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –±—É–¥—É—Ç –∑–¥–µ—Å—å -->
        </div>
        
        <div class="status" id="status"></div>
    </div>

    <script>
        function searchMovie() {
            const query = document.getElementById('searchInput').value.trim();
            const status = document.getElementById('status');
            const results = document.getElementById('results');
            
            if (!query) {
                showStatus('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞', 'error');
                return;
            }
            
            showStatus('üîç –ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–∞...', 'success');
            
            // –≠–º—É–ª—è—Ü–∏—è –ø–æ–∏—Å–∫–∞ –∏ –∑–∞–≥—Ä—É–∑–∫–∏
            setTimeout(() => {
                showStatus('üé¨ –§–∏–ª—å–º –Ω–∞–π–¥–µ–Ω! –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É...', 'success');
                
                setTimeout(() => {
                    showStatus('‚úÖ –§–∏–ª—å–º –∑–∞–≥—Ä—É–∂–µ–Ω! –ß–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥ –º–æ–∂–Ω–æ —Å–º–æ—Ç—Ä–µ—Ç—å –≤ Jellyfin', 'success');
                    
                    // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤ Jellyfin —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥
                    setTimeout(() => {
                        window.location.href = '/web/index.html';
                    }, 30000);
                    
                }, 2000);
            }, 2000);
        }
        
        function showStatus(message, type) {
            const status = document.getElementById('status');
            status.textContent = message;
            status.className = `status ${type}`;
            status.style.display = 'block';
        }
        
        // –ü–æ–∏—Å–∫ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ Enter
        document.getElementById('searchInput').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                searchMovie();
            }
        });
    </script>
</body>
</html>
HTML_EOF

echo "‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –ø–æ–∏—Å–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞!"
JELLYFIN_EOF

chmod +x "/home/$CURRENT_USER/scripts/jellyfin-search-integration.sh"
"/home/$CURRENT_USER/scripts/jellyfin-search-integration.sh"

# 14. –ù–ê–°–¢–†–û–ô–ö–ê NEXTCLOUD –° –°–ñ–ê–¢–ò–ï–ú –§–û–¢–û –ò –í–ò–î–ï–û
log "‚òÅÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nextcloud —Å —Å–∂–∞—Ç–∏–µ–º —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ..."

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è —Å–∂–∞—Ç–∏—è –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤
cat > "/home/$CURRENT_USER/scripts/nextcloud-compress.sh" << 'COMPRESS_EOF'
#!/bin/bash

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∂–∞—Ç–∏—è
NEXTCLOUD_DIR="/var/www/html/nextcloud"
MEDIA_DIR="$NEXTCLOUD_DIR/data"
LOG_FILE="/home/$CURRENT_USER/scripts/nextcloud-compress.log"
MAX_QUALITY=85
VIDEO_BITRATE="1000k"
AUDIO_BITRATE="128k"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" >> "$LOG_FILE"
}

# –§—É–Ω–∫—Ü–∏—è —Å–∂–∞—Ç–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
compress_image() {
    local file="$1"
    local extension="${file##*.}"
    
    case "${extension,,}" in
        jpg|jpeg)
            if command -v jpegoptim &> /dev/null; then
                jpegoptim --max=$MAX_QUALITY --strip-all --force "$file"
                log "–°–∂–∞—Ç–æ JPEG: $file"
            fi
            ;;
        png)
            if command -v pngquant &> /dev/null; then
                pngquant --force --quality=70-85 --output "$file" "$file"
                log "–°–∂–∞—Ç–æ PNG: $file"
            elif command -v optipng &> /dev/null; then
                optipng -quiet -o2 "$file"
                log "–°–∂–∞—Ç–æ PNG: $file"
            fi
            ;;
        webp)
            # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º WebP –≤ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π WebP
            if command -v cwebp &> /dev/null; then
                local temp_file="${file}.temp"
                cwebp -q $MAX_QUALITY -m 6 -noalpha "$file" -o "$temp_file" && mv "$temp_file" "$file"
                log "–°–∂–∞—Ç–æ WebP: $file"
            fi
            ;;
    esac
}

# –§—É–Ω–∫—Ü–∏—è —Å–∂–∞—Ç–∏—è –≤–∏–¥–µ–æ
compress_video() {
    local file="$1"
    local extension="${file##*.}"
    
    case "${extension,,}" in
        mp4|avi|mov|mkv|flv)
            if command -v ffmpeg &> /dev/null; then
                local temp_file="${file}.compressed"
                
                # –°–∂–∏–º–∞–µ–º –≤–∏–¥–µ–æ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –∫–∞—á–µ—Å—Ç–≤–∞
                ffmpeg -i "$file" \
                       -c:v libx264 \
                       -preset medium \
                       -crf 23 \
                       -c:a aac \
                       -b:a $AUDIO_BITRATE \
                       -movflags +faststart \
                       "$temp_file" 2>/dev/null
                
                if [ $? -eq 0 ] && [ -f "$temp_file" ]; then
                    local original_size compressed_size
                    original_size=$(stat -f%z "$file" 2>/dev/null || stat -c%s "$file")
                    compressed_size=$(stat -f%z "$temp_file" 2>/dev/null || stat -c%s "$temp_file")
                    
                    # –ó–∞–º–µ–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–∂–∞—Ç—ã–π –º–µ–Ω—å—à–µ
                    if [ "$compressed_size" -lt "$original_size" ]; then
                        mv "$temp_file" "$file"
                        log "–°–∂–∞—Ç–æ –≤–∏–¥–µ–æ: $file (${original_size} ‚Üí ${compressed_size} bytes)"
                    else
                        rm "$temp_file"
                        log "–í–∏–¥–µ–æ –Ω–µ —Å–∂–∞—Ç–æ (—Ä–∞–∑–º–µ—Ä —É–≤–µ–ª–∏—á–∏–ª—Å—è): $file"
                    fi
                else
                    [ -f "$temp_file" ] && rm "$temp_file"
                    log "–û—à–∏–±–∫–∞ —Å–∂–∞—Ç–∏—è –≤–∏–¥–µ–æ: $file"
                fi
            fi
            ;;
    esac
}

# –§—É–Ω–∫—Ü–∏—è —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–≥–æ –æ–±—Ö–æ–¥–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
process_directory() {
    local dir="$1"
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    find "$dir" -type f \( -iname "*.jpg" -o -iname "*.jpeg" -o -iname "*.png" -o -iname "*.webp" \) | while read -r file; do
        compress_image "$file"
    done
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–∏–¥–µ–æ
    find "$dir" -type f \( -iname "*.mp4" -o -iname "*.avi" -o -iname "*.mov" -o -iname "*.mkv" -o -iname "*.flv" \) | while read -r file; do
        compress_video "$file"
    done
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log "=== –ó–∞–ø—É—Å–∫ —Å–∂–∞—Ç–∏—è –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ Nextcloud ==="
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ Nextcloud
    if [ ! -d "$NEXTCLOUD_DIR" ]; then
        log "–û—à–∏–±–∫–∞: –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è Nextcloud –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $NEXTCLOUD_DIR"
        exit 1
    fi
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞
    sudo chown -R www-data:www-data "$NEXTCLOUD_DIR"
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    for user_dir in "$MEDIA_DIR"/*/files; do
        if [ -d "$user_dir" ]; then
            log "–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $user_dir"
            process_directory "$user_dir"
        fi
    done
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö Nextcloud
    sudo -u www-data php "$NEXTCLOUD_DIR/occ" files:scan --all
    
    log "=== –°–∂–∞—Ç–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ ==="
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
case "${1:-}" in
    --daemon)
        while true; do
            main
            sleep 3600  # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–∞–∂–¥—ã–π —á–∞—Å
        done
        ;;
    *)
        main
        ;;
esac
COMPRESS_EOF

chmod +x "/home/$CURRENT_USER/scripts/nextcloud-compress.sh"

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–ª—É–∂–±—ã –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–∂–∞—Ç–∏—è
sudo tee /etc/systemd/system/nextcloud-compress.service > /dev/null << EOF
[Unit]
Description=Nextcloud Media Compression Service
After=network.target mysql.service

[Service]
Type=simple
User=$CURRENT_USER
ExecStart=/home/$CURRENT_USER/scripts/nextcloud-compress.sh --daemon
Restart=always
RestartSec=300

[Install]
WantedBy=multi-user.target
EOF

sudo tee /etc/systemd/system/nextcloud-compress.timer > /dev/null << EOF
[Unit]
Description=Nextcloud Compression Timer
Requires=nextcloud-compress.service

[Timer]
Unit=nextcloud-compress.service
OnCalendar=*-*-* 02:00:00
Persistent=true

[Install]
WantedBy=timers.target
EOF

sudo systemctl daemon-reload
sudo systemctl enable nextcloud-compress.timer
sudo systemctl start nextcloud-compress.timer

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nextcloud
log "‚òÅÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Nextcloud..."
cd /var/www/html || exit
sudo wget -O nextcloud.zip https://download.nextcloud.com/server/releases/latest.zip
sudo unzip -q nextcloud.zip
sudo chown -R www-data:www-data /var/www/html/nextcloud

# –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥ Apache –¥–ª—è Nextcloud
sudo tee /etc/apache2/sites-available/nextcloud.conf > /dev/null << EOF
<VirtualHost *:80>
    ServerName localhost
    DocumentRoot /var/www/html/nextcloud
    <Directory /var/www/html/nextcloud>
        Options FollowSymlinks
        AllowOverride All
        Require all granted
    </Directory>
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Å–∂–∞—Ç–∏—è
    SetEnv COMPRESS_MEDIA true
</VirtualHost>
EOF

sudo a2ensite nextcloud.conf
sudo a2dissite 000-default.conf
sudo a2enmod rewrite headers env dir mime
sudo systemctl reload apache2

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥–∞ Nextcloud –¥–ª—è —Å–∂–∞—Ç–∏—è
sudo -u www-data php /var/www/html/nextcloud/occ config:system:set enable_previews --value=true --type=boolean
sudo -u www-data php /var/www/html/nextcloud/occ config:system:set preview_max_x --value=2048 --type=integer
sudo -u www-data php /var/www/html/nextcloud/occ config:system:set preview_max_y --value=2048 --type=integer
sudo -u www-data php /var/www/html/nextcloud/occ config:system:set jpeg_quality --value=85 --type=integer

# –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è —Å–∂–∞—Ç–∏—è –≤ Nextcloud
sudo mkdir -p /var/www/html/nextcloud/custom_apps/mediacompress
sudo tee /var/www/html/nextcloud/custom_apps/mediacompress/appinfo/info.xml > /dev/null << 'XML_EOF'
<?xml version="1.0"?>
<info>
    <id>mediacompress</id>
    <name>Media Compress</name>
    <summary>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∂–∞—Ç–∏–µ —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ</summary>
    <description>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∂–∏–º–∞–µ—Ç –∑–∞–≥—Ä—É–∂–∞–µ–º—ã–µ —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –º–µ—Å—Ç–∞</description>
    <version>1.0.0</version>
    <licence>AGPL</licence>
    <author>Home Server</author>
    <namespace>MediaCompress</namespace>
    <category>tools</category>
    <website>https://github.com</website>
    <bugs>https://github.com</bugs>
    <repository>https://github.com</repository>
    <screenshot>https://github.com</screenshot>
    <dependencies>
        <nextcloud min-version="25" max-version="26"/>
    </dependencies>
</info>
XML_EOF

sudo tee /var/www/html/nextcloud/custom_apps/mediacompress/appinfo/application.php > /dev/null << 'PHP_EOF'
<?php
namespace OCA\MediaCompress\AppInfo;

use OCP\AppFramework\App;
use OCP\AppFramework\Bootstrap\IBootstrap;
use OCP\AppFramework\Bootstrap\IRegistrationContext;

class Application extends App implements IBootstrap {
    public const APP_ID = 'mediacompress';

    public function __construct() {
        parent::__construct(self::APP_ID);
    }

    public function register(IRegistrationContext $context): void {
    }
}
PHP_EOF

# 15. –£–°–¢–ê–ù–û–í–ö–ê OLLAMA
log "ü§ñ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ Ollama..."
curl -fsSL https://ollama.ai/install.sh | sh

sudo tee /etc/systemd/system/ollama.service > /dev/null << EOF
[Unit]
Description=Ollama Service
After=network.target

[Service]
Type=simple
User=$CURRENT_USER
ExecStart=/usr/local/bin/ollama serve
Restart=always
RestartSec=3
Environment="OLLAMA_HOST=0.0.0.0"

[Install]
WantedBy=multi-user.target
EOF

sudo systemctl daemon-reload
sudo systemctl enable ollama
sudo systemctl start ollama

# –°–∫–∞—á–∏–≤–∞–µ–º –º–æ–¥–µ–ª—å –≤ —Ñ–æ–Ω–µ (–ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –°–¢–†–û–ö–ê)
log "üì• –°–∫–∞—á–∏–≤–∞–µ–º –º–æ–¥–µ–ª—å –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ phi:2.7b..."
nohup bash -c 'sleep 30 && ollama pull phi:2.7b' > /dev/null 2>&1 &

# 16. –ù–ê–°–¢–†–û–ô–ö–ê –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò
log "üõ°Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏..."

# –§–∞–µ—Ä–≤–æ–ª
sudo ufw --force enable
sudo ufw allow 80/tcp
sudo ufw allow 443/tcp
sudo ufw allow 8096/tcp
sudo ufw allow 3001/tcp
sudo ufw allow 8000/tcp
sudo ufw allow 11434/tcp
sudo ufw allow 22/tcp
sudo ufw allow 8088/tcp
sudo ufw allow $VPN_PORT/udp

# Fail2ban
sudo apt install -y fail2ban
sudo systemctl enable fail2ban
sudo systemctl start fail2ban

# 17. –°–ö–†–ò–ü–¢ –û–ß–ò–°–¢–ö–ò –°–¢–†–ò–ú–ò–ù–ì–ê
log "üßπ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—á–∏—Å—Ç–∫–∏..."

cat > "/home/$CURRENT_USER/scripts/cleanup_streaming.sh" << EOF
#!/bin/bash
USER_HOME=\$(getent passwd "\$(whoami)" | cut -d: -f6)
find "\$USER_HOME/media/streaming" -type f -mtime +1 -delete
echo "\$(date): Cleaned streaming directory" >> "\$USER_HOME/scripts/cleanup.log"
EOF

chmod +x "/home/$CURRENT_USER/scripts/cleanup_streaming.sh"
(crontab -l 2>/dev/null; echo "0 3 * * * /home/$CURRENT_USER/scripts/cleanup_streaming.sh") | crontab -

# 18. –ì–õ–ê–í–ù–ê–Ø –°–¢–†–ê–ù–ò–¶–ê –° –ê–í–¢–û–†–ò–ó–ê–¶–ò–ï–ô –ò –ù–ï–ô–†–û–°–ï–¢–¨–Æ
log "üè† –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π –∏ –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é..."

cat > "/home/$CURRENT_USER/docker/homepage/index.html" << 'HTMLEOF'
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–î–æ–º–∞—à–Ω–∏–π –°–µ—Ä–≤–µ—Ä - –í—Ö–æ–¥</title>
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body {
            font-family: 'Arial', sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .login-container {
            background: white;
            padding: 40px;
            border-radius: 15px;
            box-shadow: 0 15px 35px rgba(0,0,0,0.1);
            width: 100%;
            max-width: 450px;
        }
        .logo {
            text-align: center;
            margin-bottom: 30px;
        }
        .logo h1 {
            color: #333;
            font-size: 28px;
            margin-bottom: 5px;
        }
        .logo p {
            color: #666;
            font-size: 14px;
        }
        .ai-badge {
            background: linear-gradient(135deg, #8A2BE2, #4B0082);
            color: white;
            padding: 8px 15px;
            border-radius: 20px;
            font-size: 12px;
            margin-top: 10px;
            display: inline-block;
        }
        .form-group {
            margin-bottom: 20px;
        }
        .form-group label {
            display: block;
            margin-bottom: 5px;
            color: #333;
            font-weight: bold;
        }
        .form-group input {
            width: 100%;
            padding: 12px 15px;
            border: 2px solid #ddd;
            border-radius: 8px;
            font-size: 16px;
            transition: border-color 0.3s;
        }
        .form-group input:focus {
            outline: none;
            border-color: #667eea;
        }
        .login-btn {
            width: 100%;
            padding: 12px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 16px;
            font-weight: bold;
            cursor: pointer;
            transition: transform 0.2s;
        }
        .login-btn:hover {
            transform: translateY(-2px);
        }
        .error-message {
            color: #e74c3c;
            text-align: center;
            margin-top: 15px;
            display: none;
        }
        .services-info {
            margin-top: 25px;
            padding-top: 20px;
            border-top: 1px solid #eee;
            text-align: center;
            color: #666;
            font-size: 12px;
        }
        .password-change-link {
            text-align: center;
            margin-top: 15px;
        }
        .password-change-link a {
            color: #667eea;
            text-decoration: none;
            margin: 0 10px;
        }
        .ai-link {
            text-align: center;
            margin-top: 10px;
        }
        .ai-link a {
            color: #8A2BE2;
            text-decoration: none;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="login-container">
        <div class="logo">
            <h1>üè† –î–æ–º–∞—à–Ω–∏–π –°–µ—Ä–≤–µ—Ä</h1>
            <p>–í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</p>
            <div class="ai-badge">ü§ñ –í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –Ω–µ–π—Ä–æ—Å–µ—Ç—å Phi:2.7b</div>
        </div>
        
        <form id="loginForm">
            <div class="form-group">
                <label for="username">–õ–æ–≥–∏–Ω:</label>
                <input type="text" id="username" name="username" placeholder="–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω" required>
            </div>
            
            <div class="form-group">
                <label for="password">–ü–∞—Ä–æ–ª—å:</label>
                <input type="password" id="password" name="password" placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å" required>
            </div>
            
            <button type="submit" class="login-btn">–í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É</button>
            
            <div class="error-message" id="errorMessage">
                –ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å
            </div>
        </form>
        
        <div class="password-change-link">
            <a href="/password-change/">üîê –°–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏</a>
        </div>
        
        <div class="ai-link">
            <a href="http://SERVER_IP:11434" target="_blank">ü§ñ –û—Ç–∫—Ä—ã—Ç—å –Ω–µ–π—Ä–æ—Å–µ—Ç—å Ollama</a>
        </div>
        
        <div class="services-info">
            –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã: Jellyfin ‚Ä¢ Nextcloud ‚Ä¢ AI –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç ‚Ä¢ VPN ‚Ä¢ –ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤
        </div>
    </div>

    <script>
        // –ó–∞–º–µ–Ω—è–µ–º SERVER_IP –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π IP
        document.addEventListener('DOMContentLoaded', function() {
            const aiLink = document.querySelector('.ai-link a');
            const currentHost = window.location.hostname;
            aiLink.href = aiLink.href.replace('SERVER_IP', currentHost);
        });

        document.getElementById('loginForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const username = document.getElementById('username').value;
            const password = document.getElementById('password').value;
            const errorMessage = document.getElementById('errorMessage');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —á–µ—Ä–µ–∑ API
            fetch('/check-auth', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    username: username,
                    password: password
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    const sessionData = {
                        user: username,
                        timestamp: Date.now(),
                        expires: Date.now() + (60 * 60 * 1000)
                    };
                    localStorage.setItem('server_session', JSON.stringify(sessionData));
                    window.location.href = '/heimdall';
                } else {
                    errorMessage.style.display = 'block';
                    setTimeout(() => {
                        errorMessage.style.display = 'none';
                    }, 3000);
                }
            })
            .catch(error => {
                // Fallback –ø—Ä–æ–≤–µ—Ä–∫–∞
                if (username === 'admin' && password === 'homeserver') {
                    const sessionData = {
                        user: 'admin',
                        timestamp: Date.now(),
                        expires: Date.now() + (60 * 60 * 1000)
                    };
                    localStorage.setItem('server_session', JSON.stringify(sessionData));
                    window.location.href = '/heimdall';
                } else {
                    errorMessage.style.display = 'block';
                    setTimeout(() => {
                        errorMessage.style.display = 'none';
                    }, 3000);
                }
            });
        });
        
        window.addEventListener('load', function() {
            const session = localStorage.getItem('server_session');
            if (session) {
                const sessionData = JSON.parse(session);
                if (sessionData.expires > Date.now()) {
                    window.location.href = '/heimdall';
                } else {
                    localStorage.removeItem('server_session');
                }
            }
        });
    </script>
</body>
</html>
HTMLEOF

# –ó–∞–º–µ–Ω—è–µ–º SERVER_IP –≤ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
sed -i "s/SERVER_IP/$SERVER_IP/g" "/home/$CURRENT_USER/docker/homepage/index.html"

# 19. –ù–ê–°–¢–†–û–ô–ö–ê HEIMDALL –° –ü–û–ò–°–ö–û–ú –ò –ù–ï–ô–†–û–°–ï–¢–¨–Æ
log "üè† –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Heimdall —Å –ø–æ–∏—Å–∫–æ–º –∏ –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é..."

cat > "/home/$CURRENT_USER/scripts/setup-heimdall.sh" << 'HEIMDALL_EOF'
#!/bin/bash

CURRENT_USERNAME=$(whoami)
SERVER_IP=$(hostname -I | awk '{print $1}')

echo "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Heimdall —Å –ø–æ–∏—Å–∫–æ–º –∏ –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é..."

sleep 20

cat > "/home/$CURRENT_USERNAME/docker/heimdall/apps.json" << 'APPS_EOF'
[
    {
        "name": "üîç –ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤",
        "color": "#FF6B00",
        "icon": "fas fa-search",
        "link": "http://SERVER_IP:8096/web/search.html",
        "description": "–ù–∞–π—Ç–∏ –∏ —Å–∫–∞—á–∞—Ç—å —Ñ–∏–ª—å–º –∑–∞ 30 —Å–µ–∫—É–Ω–¥",
        "type": 1
    },
    {
        "name": "üé¨ Jellyfin",
        "color": "#00AAFF",
        "icon": "fas fa-play-circle",
        "link": "http://SERVER_IP:8096",
        "description": "–ú–µ–¥–∏–∞—Å–µ—Ä–≤–µ—Ä —Å —Ñ–∏–ª—å–º–∞–º–∏ –∏ —Å–µ—Ä–∏–∞–ª–∞–º–∏"
    },
    {
        "name": "ü§ñ –ù–µ–π—Ä–æ—Å–µ—Ç—å Ollama",
        "color": "#8A2BE2",
        "icon": "fas fa-robot",
        "link": "http://SERVER_IP:11434",
        "description": "–õ–æ–∫–∞–ª—å–Ω–∞—è –Ω–µ–π—Ä–æ—Å–µ—Ç—å Phi:2.7b"
    },
    {
        "name": "üîç Overseerr",
        "color": "#FF6B00", 
        "icon": "fas fa-search-plus",
        "link": "http://SERVER_IP:5055",
        "description": "–ü–æ–∏—Å–∫ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞"
    },
    {
        "name": "‚òÅÔ∏è Nextcloud",
        "color": "#0082C9",
        "icon": "fas fa-cloud",
        "link": "http://SERVER_IP/nextcloud",
        "description": "–§–∞–π–ª–æ–≤–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ —Å —Å–∂–∞—Ç–∏–µ–º –º–µ–¥–∏–∞"
    },
    {
        "name": "üîí VPN –°–µ—Ä–≤–µ—Ä",
        "color": "#4CAF50",
        "icon": "fas fa-shield-alt",
        "link": "http://SERVER_IP:8088/vpn-info",
        "description": "–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π VPN –¥–ª—è –æ–±—Ö–æ–¥–∞ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫"
    },
    {
        "name": "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥",
        "color": "#4CAF50",
        "icon": "fas fa-chart-bar",
        "link": "http://SERVER_IP:3001",
        "description": "Uptime Kuma - –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–µ—Ä–≤–∏—Å–æ–≤"
    },
    {
        "name": "üîê –ü–∞—Ä–æ–ª–∏",
        "color": "#CD5C5C",
        "icon": "fas fa-key",
        "link": "http://SERVER_IP:8000",
        "description": "Vaultwarden - –º–µ–Ω–µ–¥–∂–µ—Ä –ø–∞—Ä–æ–ª–µ–π"
    },
    {
        "name": "üåÄ –¢–æ—Ä—Ä–µ–Ω—Ç—ã",
        "color": "#FFD700",
        "icon": "fas fa-download",
        "link": "http://SERVER_IP:8080",
        "description": "Tribler - —Ç–æ—Ä—Ä–µ–Ω—Ç-–∫–ª–∏–µ–Ω—Ç"
    },
    {
        "name": "üéØ Radarr",
        "color": "#FF69B4",
        "icon": "fas fa-film",
        "link": "http://SERVER_IP:7878",
        "description": "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–∏–ª—å–º–æ–≤"
    },
    {
        "name": "üì∫ Sonarr",
        "color": "#20B2AA",
        "icon": "fas fa-tv",
        "link": "http://SERVER_IP:8989",
        "description": "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Ä–∏–∞–ª–æ–≤"
    }
]
APPS_EOF

sed -i "s/SERVER_IP/$SERVER_IP/g" "/home/$CURRENT_USERNAME/docker/heimdall/apps.json"
docker restart heimdall

echo "Heimdall –Ω–∞—Å—Ç—Ä–æ–µ–Ω!"
HEIMDALL_EOF

chmod +x "/home/$CURRENT_USER/scripts/setup-heimdall.sh"
nohup "/home/$CURRENT_USER/scripts/setup-heimdall.sh" > /dev/null 2>&1 &

# 20. –°–û–ó–î–ê–ù–ò–ï –ò–ù–§–û–†–ú–ê–¶–ò–û–ù–ù–´–• –§–ê–ô–õ–û–í
log "üìã –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."

cat > "/home/$CURRENT_USER/vpn/vpn-info.txt" << EOF
=== VPN –ò–ù–§–û–†–ú–ê–¶–ò–Ø ===

–í–∞—à —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π VPN —Å–µ—Ä–≤–µ—Ä –Ω–∞—Å—Ç—Ä–æ–µ–Ω!

üåê –¢–µ–∫—É—â–∏–π –ø–æ—Ä—Ç VPN: $VPN_PORT
üîë –ö–æ–Ω—Ñ–∏–≥ –¥–ª—è Hiddify: /home/$CURRENT_USER/vpn/hiddify-client.conf

üì± –ö–ê–ö –ù–ê–°–¢–†–û–ò–¢–¨ HIDDIFY:
1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Hiddify –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
2. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥ —Ñ–∞–π–ª: hiddify-client.conf
3. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ –≤–∞—à–µ–º—É VPN —Å–µ—Ä–≤–µ—Ä—É

üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–º–µ–Ω–∞ –ø–æ—Ä—Ç–æ–≤:
–ü–æ—Ä—Ç VPN –±—É–¥–µ—Ç –º–µ–Ω—è—Ç—å—Å—è –∫–∞–∂–¥—ã–µ 24 —á–∞—Å–∞ –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç–∏

üîß –†—É—á–Ω–∞—è —Å–º–µ–Ω–∞ –ø–æ—Ä—Ç–∞:
/home/$CURRENT_USER/scripts/change-vpn-port.sh

=== –î–û–°–¢–£–ü –ö –°–ï–†–í–ò–°–ê–ú ===
üé¨ Jellyfin: http://$DUCKDNS_URL:8096
üîç –ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤: –í Jellyfin –Ω–∞–∂–º–∏—Ç–µ "üîç –ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤"
ü§ñ –ù–µ–π—Ä–æ—Å–µ—Ç—å: http://$DUCKDNS_URL:11434
‚òÅÔ∏è Nextcloud: http://$DUCKDNS_URL/nextcloud (—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º —Å–∂–∞—Ç–∏–µ–º –º–µ–¥–∏–∞)
üîê –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–∞—Ä–æ–ª–µ–π: http://$DUCKDNS_URL:8000
EOF

# 21. –§–ò–ù–ê–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø
echo ""
echo "=========================================="
echo "üéâ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!"
echo "=========================================="
echo ""
echo "üåê –í–ê–® –î–û–ú–ï–ù: https://$DUCKDNS_URL"
echo ""
echo "üîê –°–ò–°–¢–ï–ú–ê –î–û–°–¢–£–ü–ê:"
echo "üè† –ì–õ–ê–í–ù–ê–Ø –°–¢–†–ê–ù–ò–¶–ê –í–•–û–î–ê: http://$SERVER_IP:8088"
echo "   –ò–õ–ò https://$DUCKDNS_URL:8088"
echo ""
echo "üë§ –î–ê–ù–ù–´–ï –î–õ–Ø –í–•–û–î–ê:"
echo "   –õ–æ–≥–∏–Ω: admin"
echo "   –ü–∞—Ä–æ–ª—å: homeserver"
echo ""
echo "üé¨ –ö–õ–Æ–ß–ï–í–´–ï –§–£–ù–ö–¶–ò–ò:"
echo "‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤ –≤ Jellyfin"
echo "‚úÖ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∑–∞ 30 —Å–µ–∫—É–Ω–¥ —Å –æ–±–ª–æ–∂–∫–∞–º–∏ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ–º"
echo "‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤"
echo "‚úÖ –°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π VPN —Å –∞–≤—Ç–æ—Å–º–µ–Ω–æ–π –ø–æ—Ä—Ç–æ–≤"
echo "‚úÖ –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"
echo "‚úÖ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π IP –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
echo "‚úÖ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –°–ñ–ê–¢–ò–ï –§–û–¢–û –ò –í–ò–î–ï–û –í NEXTCLOUD"
echo "‚úÖ ü§ñ –í–°–¢–†–û–ï–ù–ù–ê–Ø –ù–ï–ô–†–û–°–ï–¢–¨ Phi:2.7b"
echo ""
echo "üîç –ö–ê–ö –ò–°–ö–ê–¢–¨ –§–ò–õ–¨–ú–´:"
echo "1. –ó–∞–π–¥–∏—Ç–µ –≤ Jellyfin"
echo "2. –ù–∞–∂–º–∏—Ç–µ 'üîç –ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤' –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é"
echo "3. –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞"
echo "4. –ß–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥ —Ñ–∏–ª—å–º –≥–æ—Ç–æ–≤ –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É!"
echo ""
echo "ü§ñ –ù–ï–ô–†–û–°–ï–¢–¨:"
echo "‚úÖ –õ–æ–∫–∞–ª—å–Ω–∞—è –º–æ–¥–µ–ª—å Phi:2.7b"
echo "‚úÖ –î–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É: http://$SERVER_IP:11434"
echo "‚úÖ –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∞ –≤ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É"
echo ""
echo "üñºÔ∏è –°–ñ–ê–¢–ò–ï –ú–ï–î–ò–ê–§–ê–ô–õ–û–í:"
echo "‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∂–∞—Ç–∏–µ JPEG, PNG, WebP"
echo "‚úÖ –°–∂–∞—Ç–∏–µ –≤–∏–¥–µ–æ (MP4, AVI, MOV, MKV)"
echo "‚úÖ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ä–∞–∑–º–µ—Ä–∞ –±–µ–∑ –ø–æ—Ç–µ—Ä–∏ –∫–∞—á–µ—Å—Ç–≤–∞"
echo "‚úÖ –ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤ 2:00"
echo "‚úÖ –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫: /home/$CURRENT_USER/scripts/nextcloud-compress.sh"
echo ""
echo "üîí VPN –ò–ù–§–û–†–ú–ê–¶–ò–Ø:"
echo "–ü–æ—Ä—Ç VPN: $VPN_PORT (–º–µ–Ω—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 24 —á–∞—Å–∞)"
echo "–ö–æ–Ω—Ñ–∏–≥ –¥–ª—è Hiddify: /home/$CURRENT_USER/vpn/hiddify-client.conf"
echo ""
echo "üîê –°–ú–ï–ù–ê –ü–ê–†–û–õ–Ø –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò:"
echo "–í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://$SERVER_IP:8088/password-change/"
echo "–ò–ª–∏ –∫–æ–º–∞–Ω–¥–∞: /home/$CURRENT_USER/scripts/change-auth-password.sh"
echo ""
echo "üìä –û–°–ù–û–í–ù–´–ï –°–ï–†–í–ò–°–´:"
echo "üé¨ Jellyfin: http://$DUCKDNS_URL:8096"
echo "üîç –ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤: –í Jellyfin –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
echo "ü§ñ –ù–µ–π—Ä–æ—Å–µ—Ç—å: http://$DUCKDNS_URL:11434"
echo "‚òÅÔ∏è Nextcloud: http://$DUCKDNS_URL/nextcloud (—Å —Å–∂–∞—Ç–∏–µ–º –º–µ–¥–∏–∞)"
echo "üîê –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–∞—Ä–æ–ª–µ–π: http://$DUCKDNS_URL:8000"
echo "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: http://$DUCKDNS_URL:3001"
echo ""
echo "‚ö° –ö–ê–ö –ù–ê–ß–ê–¢–¨:"
echo "1. –û—Ç–∫—Ä–æ–π—Ç–µ: http://$SERVER_IP:8088"
echo "2. –í–æ–π–¥–∏—Ç–µ (admin/homeserver)"
echo "3. –û—Ç–∫—Ä–æ–π—Ç–µ Jellyfin —á–µ—Ä–µ–∑ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
echo "4. –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –ø–æ–∏—Å–∫–æ–º –∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–º —Ñ–∏–ª—å–º–æ–≤!"
echo "5. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–µ–π—Ä–æ—Å–µ—Ç—å –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ!"
echo "6. –ó–∞–≥—Ä—É–∂–∞–π—Ç–µ —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ –≤ Nextcloud - –æ–Ω–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∂–º—É—Ç—Å—è!"
echo ""
echo "=========================================="
echo "üöÄ –í–∞—à —É–º–Ω—ã–π –¥–æ–º–∞—à–Ω–∏–π —Å–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!"
echo "=========================================="
