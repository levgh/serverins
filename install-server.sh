#!/bin/bash

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
DOMAIN="domenforserver123"
TOKEN="7c4ac80c-d14f-4ca6-ae8c-df2b04a939ae"
USERNAME=$(whoami)
SERVER_IP=$(hostname -I | awk '{print $1}')
DUCKDNS_URL="$DOMAIN.duckdns.org"

echo "=========================================="
echo "üöÄ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –£–°–¢–ê–ù–û–í–ö–ê –î–û–ú–ê–®–ù–ï–ì–û –°–ï–†–í–ï–†–ê"
echo "=========================================="

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo "[$(date '+%H:%M:%S')] $1"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è —Å–∏—Å—Ç–µ–º—ã
change_system_password() {
    log "üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è —Å–∏—Å—Ç–µ–º—ã..."
    
    # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è
    cat > /home/$USER/scripts/change_password.sh << 'PASS_EOF'
#!/bin/bash
echo "=== –°–ú–ï–ù–ê –ü–ê–†–û–õ–Ø –°–ò–°–¢–ï–ú–´ ==="
read -s -p "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å: " current_pass
echo

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å
if ! echo "$current_pass" | sudo -S true 2>/dev/null; then
    echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å!"
    exit 1
fi

read -s -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å: " new_pass1
echo
read -s -p "–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å: " new_pass2
echo

if [ "$new_pass1" != "$new_pass2" ]; then
    echo "‚ùå –ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç!"
    exit 1
fi

if [ -z "$new_pass1" ]; then
    echo "‚ùå –ü–∞—Ä–æ–ª—å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!"
    exit 1
fi

# –ú–µ–Ω—è–µ–º –ø–∞—Ä–æ–ª—å
echo "$USER:$new_pass1" | sudo chpasswd

# –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å –≤–æ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–∞—Ö
sudo sed -i "s/homeserver/$new_pass1/g" /home/$USER/docker/docker-compose.yml 2>/dev/null || true
sudo sed -i "s/homeserver/$new_pass1/g" /home/$USER/docker/homepage/index.html 2>/dev/null || true

echo "‚úÖ –ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω!"
echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã..."

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
cd /home/$USER/docker
docker-compose restart

echo "üéâ –°–∏—Å—Ç–µ–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ —Å –Ω–æ–≤—ã–º –ø–∞—Ä–æ–ª–µ–º!"
PASS_EOF

    chmod +x /home/$USER/scripts/change_password.sh
    
    # –°–æ–∑–¥–∞–µ–º –∞–ª–∏–∞—Å –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
    echo "alias change-pass='/home/$USER/scripts/change_password.sh'" >> /home/$USER/.bashrc
}

# 1. –û–ë–ù–û–í–õ–ï–ù–ò–ï –°–ò–°–¢–ï–ú–´
log "üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
sudo apt update && sudo apt upgrade -y

# 2. –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô
log "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤..."
sudo apt install -y \
  curl wget git \
  docker.io docker-compose \
  apache2 mysql-server \
  php php-curl php-gd php-mysql php-xml php-zip php-mbstring php-intl \
  cron nano htop tree unzip net-tools wireguard resolvconf

# 3. –ù–ê–°–¢–†–û–ô–ö–ê –°–¢–ê–¢–ò–ß–ï–°–ö–û–ì–û IP
log "üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ IP..."
INTERFACE=$(ip route | grep default | awk '{print $5}')
CURRENT_IP=$(hostname -I | awk '{print $1}')
GATEWAY=$(ip route | grep default | awk '{print $3}')
NETWORK=$(ip route | grep -v default | grep $INTERFACE | awk '{print $1}' | head -1)

cat > /tmp/network-config.txt << EOF
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ç–∏
–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å: $INTERFACE
–¢–µ–∫—É—â–∏–π IP: $CURRENT_IP
–®–ª—é–∑: $GATEWAY
–°–µ—Ç—å: $NETWORK
EOF

# –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø —Ç–µ–∫—É—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
sudo cp /etc/netplan/01-netcfg.yaml /etc/netplan/01-netcfg.yaml.backup 2>/dev/null || true

# –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ñ–∏–≥ netplan
sudo tee /etc/netplan/01-netcfg.yaml > /dev/null << EOF
network:
  version: 2
  renderer: networkd
  ethernets:
    $INTERFACE:
      dhcp4: no
      addresses: [$CURRENT_IP/24]
      gateway4: $GATEWAY
      nameservers:
        addresses: [8.8.8.8, 1.1.1.1]
EOF

# –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
sudo netplan apply
log "‚úÖ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π IP –Ω–∞—Å—Ç—Ä–æ–µ–Ω: $CURRENT_IP"

# 4. –ù–ê–°–¢–†–û–ô–ö–ê DOCKER
log "üê≥ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Docker..."
sudo systemctl enable docker
sudo systemctl start docker
sudo usermod -aG docker $USER
newgrp docker << EOF
EOF

# 5. –ù–ê–°–¢–†–û–ô–ö–ê –ß–ê–°–û–í–û–ì–û –ü–û–Ø–°–ê
log "‚è∞ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—Ä–µ–º–µ–Ω–∏..."
sudo timedatectl set-timezone Europe/Moscow

# 6. –ù–ê–°–¢–†–û–ô–ö–ê DUCKDNS
log "üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ DuckDNS..."
mkdir -p /home/$USER/scripts

cat > /home/$USER/scripts/duckdns-update.sh << EOF
#!/bin/bash
DOMAIN="$DOMAIN"
TOKEN="$TOKEN"
URL="https://www.duckdns.org/update?domains=\${DOMAIN}&token=\${TOKEN}&ip="
response=\$(curl -s -w "\n%{http_code}" "\$URL")
http_code=\$(echo "\$response" | tail -n1)
content=\$(echo "\$response" | head -n1)
echo "\$(date): HTTP \$http_code - \$content" >> "/home/$USER/scripts/duckdns.log"
EOF

chmod +x /home/$USER/scripts/duckdns-update.sh

# –î–æ–±–∞–≤–ª—è–µ–º –≤ Cron
(crontab -l 2>/dev/null; echo "*/5 * * * * /home/$USER/scripts/duckdns-update.sh") | crontab -
/home/$USER/scripts/duckdns-update.sh

# 7. –ù–ê–°–¢–†–û–ô–ö–ê WIREGUARD VPN
log "üõ°Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ WireGuard VPN..."
mkdir -p /home/$USER/docker/wireguard

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª—é—á–∏
wg genkey | sudo tee /home/$USER/docker/wireguard/server_private.key | wg pubkey | sudo tee /home/$USER/docker/wireguard/server_public.key
wg genkey | sudo tee /home/$USER/docker/wireguard/client_private.key | wg pubkey | sudo tee /home/$USER/docker/wireguard/client_public.key

SERVER_PRIVATE_KEY=$(sudo cat /home/$USER/docker/wireguard/server_private.key)
SERVER_PUBLIC_KEY=$(sudo cat /home/$USER/docker/wireguard/server_public.key)
CLIENT_PRIVATE_KEY=$(sudo cat /home/$USER/docker/wireguard/client_private.key)
CLIENT_PUBLIC_KEY=$(sudo cat /home/$USER/docker/wireguard/client_public.key)

# –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥ —Å–µ—Ä–≤–µ—Ä–∞ WireGuard
sudo tee /home/$USER/docker/wireguard/wg0.conf > /dev/null << EOF
[Interface]
PrivateKey = $SERVER_PRIVATE_KEY
Address = 10.8.0.1/24
ListenPort = 51820
SaveConfig = true
PostUp = iptables -A FORWARD -i %i -j ACCEPT; iptables -A FORWARD -o %i -j ACCEPT; iptables -t nat -A POSTROUTING -o $INTERFACE -j MASQUERADE
PostDown = iptables -D FORWARD -i %i -j ACCEPT; iptables -D FORWARD -o %i -j ACCEPT; iptables -t nat -D POSTROUTING -o $INTERFACE -j MASQUERADE

[Peer]
PublicKey = $CLIENT_PUBLIC_KEY
AllowedIPs = 10.8.0.2/32
EOF

# –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥ –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è HidiFace
sudo tee /home/$USER/docker/wireguard/client.conf > /dev/null << EOF
[Interface]
PrivateKey = $CLIENT_PRIVATE_KEY
Address = 10.8.0.2/24
DNS = 8.8.8.8, 1.1.1.1

[Peer]
PublicKey = $SERVER_PUBLIC_KEY
Endpoint = $DUCKDNS_URL:51820
AllowedIPs = 0.0.0.0/0
PersistentKeepalive = 25
EOF

# –í–∫–ª—é—á–∞–µ–º IP forwarding
echo 'net.ipv4.ip_forward=1' | sudo tee -a /etc/sysctl.conf
sudo sysctl -p

# 8. –°–û–ó–î–ê–ù–ò–ï –ü–ê–ü–û–ö –î–õ–Ø –°–ï–†–í–ò–°–û–í
log "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫..."
mkdir -p /home/$USER/docker/{jellyfin,tribler,jackett,overseerr,heimdall,uptime-kuma,vaultwarden,homepage,radarr,sonarr,bazarr,prowlarr,qbittorrent}
mkdir -p /home/$USER/media/{movies,tv,streaming,music,downloads,completed,torrents}
mkdir -p /home/$USER/backups

# 7.1. –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê –î–õ–Ø HIDDIFY
log "üîß –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è Hiddify..."

# –°–æ–∑–¥–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ñ–∏–≥ –¥–ª—è Hiddify
sudo tee /home/$USER/docker/wireguard/hiddify.conf > /dev/null << EOF
[Interface]
PrivateKey = $CLIENT_PRIVATE_KEY
Address = 10.8.0.2/24
DNS = 8.8.8.8, 1.1.1.1, 208.67.222.222
MTU = 1420

[Peer]
PublicKey = $SERVER_PUBLIC_KEY
Endpoint = $DUCKDNS_URL:51820
AllowedIPs = 0.0.0.0/0
PersistentKeepalive = 25
EOF

# –°–æ–∑–¥–∞–µ–º QR-–∫–æ–¥ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è Hiddify
if command -v qrencode &> /dev/null; then
    echo "üì± –°–æ–∑–¥–∞–µ–º QR-–∫–æ–¥ –¥–ª—è Hiddify..."
    qrencode -t PNG -o /home/$USER/docker/wireguard/hiddify.png < /home/$USER/docker/wireguard/hiddify.conf
    echo "‚úÖ QR-–∫–æ–¥ —Å–æ–∑–¥–∞–Ω: /home/$USER/docker/wireguard/hiddify.png"
fi

# 9. –ó–ê–ü–£–°–ö –í–°–ï–• –°–ï–†–í–ò–°–û–í –ß–ï–†–ï–ó DOCKER-COMPOSE
log "üê≥ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."

cat > /home/$USER/docker/docker-compose.yml << EOF
version: '3.8'

networks:
  server-net:
    driver: bridge

services:
  # Jellyfin - –º–µ–¥–∏–∞—Å–µ—Ä–≤–µ—Ä
  jellyfin:
    image: jellyfin/jellyfin:latest
    container_name: jellyfin
    restart: unless-stopped
    ports:
      - "8096:8096"
    volumes:
      - /home/$USER/docker/jellyfin:/config
      - /home/$USER/media:/media
    environment:
      - TZ=Europe/Moscow
    networks:
      - server-net

  # –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞ –∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    ports:
      - "7878:7878"
    volumes:
      - /home/$USER/docker/radarr:/config
      - /home/$USER/media/movies:/movies
      - /home/$USER/media/downloads:/downloads
    environment:
      - TZ=Europe/Moscow
      - PUID=1000
      - PGID=1000
    networks:
      - server-net

  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    ports:
      - "8989:8989"
    volumes:
      - /home/$USER/docker/sonarr:/config
      - /home/$USER/media/tv:/tv
      - /home/$USER/media/downloads:/downloads
    environment:
      - TZ=Europe/Moscow
      - PUID=1000
      - PGID=1000
    networks:
      - server-net

  bazarr:
    image: linuxserver/bazarr:latest
    container_name: bazarr
    restart: unless-stopped
    ports:
      - "6767:6767"
    volumes:
      - /home/$USER/docker/bazarr:/config
      - /home/$USER/media:/media
    environment:
      - TZ=Europe/Moscow
      - PUID=1000
      - PGID=1000
    networks:
      - server-net

  prowlarr:
    image: linuxserver/prowlarr:latest
    container_name: prowlarr
    restart: unless-stopped
    ports:
      - "9696:9696"
    volumes:
      - /home/$USER/docker/prowlarr:/config
    environment:
      - TZ=Europe/Moscow
      - PUID=1000
      - PGID=1000
    networks:
      - server-net

  qbittorrent:
    image: linuxserver/qbittorrent:latest
    container_name: qbittorrent
    restart: unless-stopped
    ports:
      - "8081:8080"
      - "6881:6881"
      - "6881:6881/udp"
    volumes:
      - /home/$USER/docker/qbittorrent:/config
      - /home/$USER/media/downloads:/downloads
      - /home/$USER/media/completed:/completed
    environment:
      - TZ=Europe/Moscow
      - PUID=1000
      - PGID=1000
      - WEBUI_PORT=8080
    networks:
      - server-net

  # Tribler - —Ç–æ—Ä—Ä–µ–Ω—Ç-–∫–ª–∏–µ–Ω—Ç —Å —Å—Ç—Ä–∏–º–∏–Ω–≥–æ–º
  tribler:
    image: tribler/tribler:latest
    container_name: tribler
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - /home/$USER/docker/tribler:/root/.Tribler
      - /home/$USER/media/streaming:/downloads
    environment:
      - TZ=Europe/Moscow
    networks:
      - server-net

  # Jackett - –ø–æ–∏—Å–∫ –ø–æ —Ç—Ä–µ–∫–µ—Ä–∞–º
  jackett:
    image: linuxserver/jackett:latest
    container_name: jackett
    restart: unless-stopped
    ports:
      - "9117:9117"
    volumes:
      - /home/$USER/docker/jackett:/config
      - /home/$USER/media/streaming:/downloads
    environment:
      - TZ=Europe/Moscow
      - PUID=1000
      - PGID=1000
    networks:
      - server-net

  # Overseerr - –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∑–∞–ø—Ä–æ—Å–æ–≤
  overseerr:
    image: linuxserver/overseerr:latest
    container_name: overseerr
    restart: unless-stopped
    ports:
      - "5055:5055"
    volumes:
      - /home/$USER/docker/overseerr:/config
    environment:
      - TZ=Europe/Moscow
      - PUID=1000
      - PGID=1000
    networks:
      - server-net

  # Heimdall - –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
  heimdall:
    image: lscr.io/linuxserver/heimdall:latest
    container_name: heimdall
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - /home/$USER/docker/heimdall:/config
    environment:
      - TZ=Europe/Moscow
      - PUID=1000
      - PGID=1000
    networks:
      - server-net

  # Uptime Kuma - –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
  uptime-kuma:
    image: louislam/uptime-kuma:1
    container_name: uptime-kuma
    restart: unless-stopped
    ports:
      - "3001:3001"
    volumes:
      - /home/$USER/docker/uptime-kuma:/app/data
    environment:
      - TZ=Europe/Moscow
    networks:
      - server-net

  # Vaultwarden - –º–µ–Ω–µ–¥–∂–µ—Ä –ø–∞—Ä–æ–ª–µ–π
  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - /home/$USER/docker/vaultwarden/data:/data
    environment:
      - TZ=Europe/Moscow
      - ADMIN_TOKEN=admin
      - SIGNUPS_ALLOWED=true
    networks:
      - server-net

  # WireGuard VPN
  wireguard:
    image: linuxserver/wireguard:latest
    container_name: wireguard
    restart: unless-stopped
    ports:
      - "51820:51820/udp"
    volumes:
      - /home/$USER/docker/wireguard:/config
      - /lib/modules:/lib/modules
    environment:
      - TZ=Europe/Moscow
      - PUID=1000
      - PGID=1000
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv4.ip_forward=1
    networks:
      - server-net

  # –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
  homepage:
    image: nginx:alpine
    container_name: homepage
    restart: unless-stopped
    ports:
      - "8088:80"
    volumes:
      - /home/$USER/docker/homepage:/usr/share/nginx/html
    networks:
      - server-net
EOF

# –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
cd /home/$USER/docker
docker-compose up -d

# 10. –°–ò–°–¢–ï–ú–ê "–ù–ê–ñ–ê–õ –°–ú–û–¢–†–ò" - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–∏–ª—å–º–æ–≤
log "üé¨ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã '–ù–∞–∂–∞–ª –°–º–æ—Ç—Ä–∏'..."

# –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–∏—Å—Ç–µ–º—ã
cat > /home/$USER/scripts/auto-movie-system.sh << 'MOVIE_EOF'
#!/bin/bash

echo "üé¨ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–∏—Å—Ç–µ–º—ã –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∏–ª—å–º–æ–≤..."

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
sleep 30

# –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–∏—Å—Ç–µ–º—ã
cat > /home/$USER/scripts/movie-automation.py << 'PYTHON_EOF'
#!/usr/bin/env python3
import os
import time
import requests
import json
from pathlib import Path

class MovieAutomation:
    def __init__(self):
        self.radarr_url = "http://localhost:7878"
        self.sonarr_url = "http://localhost:8989"
        self.jellyfin_url = "http://localhost:8096"
        self.qbittorrent_url = "http://localhost:8081"
        
    def search_and_download(self, movie_title):
        """–ü–æ–∏—Å–∫ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–∏–ª—å–º–∞"""
        try:
            print(f"üîç –ò—â–µ–º —Ñ–∏–ª—å–º: {movie_title}")
            
            # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ø–æ–∏—Å–∫–æ–º –∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ–º
            # –ü–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
            
            print(f"‚úÖ –§–∏–ª—å–º '{movie_title}' –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ—á–µ—Ä–µ–¥—å –∑–∞–≥—Ä—É–∑–∫–∏")
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            return False
    
    def cleanup_watched(self):
        """–û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤"""
        try:
            media_path = "/home/$USER/media/streaming"
            for file in Path(media_path).glob("*"):
                if file.is_file():
                    # –ü—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞: —É–¥–∞–ª—è–µ–º —Ñ–∞–π–ª—ã —Å—Ç–∞—Ä—à–µ 1 –¥–Ω—è
                    if file.stat().st_mtime < time.time() - 86400:
                        file.unlink()
                        print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω: {file.name}")
            
            print("‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ: {e}")

if __name__ == "__main__":
    automation = MovieAutomation()
    automation.cleanup_watched()
PYTHON_EOF

chmod +x /home/$USER/scripts/movie-automation.py

# –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫—Ä–æ–Ω –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é –æ—á–∏—Å—Ç–∫—É
(crontab -l 2>/dev/null; echo "0 4 * * * /usr/bin/python3 /home/$USER/scripts/movie-automation.py") | crontab -

echo "‚úÖ –°–∏—Å—Ç–µ–º–∞ '–ù–∞–∂–∞–ª –°–º–æ—Ç—Ä–∏' –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞!"
MOVIE_EOF

chmod +x /home/$USER/scripts/auto-movie-system.sh
nohup /home/$USER/scripts/auto-movie-system.sh > /dev/null 2>&1 &

# 11. –ù–ê–°–¢–†–û–ô–ö–ê NEXTCLOUD
log "‚òÅÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Nextcloud..."
cd /var/www/html
sudo wget -O nextcloud.zip https://download.nextcloud.com/server/releases/latest.zip
sudo unzip -q nextcloud.zip
sudo chown -R www-data:www-data /var/www/html/nextcloud

# –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥ Apache –¥–ª—è Nextcloud
sudo tee /etc/apache2/sites-available/nextcloud.conf > /dev/null << EOF
<VirtualHost *:80>
    ServerName localhost
    DocumentRoot /var/www/html/nextcloud
    <Directory /var/www/html/nextcloud>
        Options FollowSymLinks
        AllowOverride All
        Require all granted
    </Directory>
</VirtualHost>
EOF

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º Nextcloud
sudo a2ensite nextcloud.conf
sudo a2dissite 000-default.conf
sudo a2enmod rewrite headers env dir mime
sudo systemctl reload apache2

# 12. –£–°–¢–ê–ù–û–í–ö–ê OLLAMA (–ù–ï–ô–†–û–°–ï–¢–¨)
log "ü§ñ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ Ollama..."
curl -fsSL https://ollama.ai/install.sh | sh

# –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞
sudo tee /etc/systemd/system/ollama.service > /dev/null << EOF
[Unit]
Description=Ollama Service
After=network.target

[Service]
Type=simple
User=$USER
ExecStart=/usr/local/bin/ollama serve
Restart=always
RestartSec=3
Environment="OLLAMA_HOST=0.0.0.0"

[Install]
WantedBy=multi-user.target
EOF

sudo systemctl daemon-reload
sudo systemctl enable ollama
sudo systemctl start ollama

# –°–∫–∞—á–∏–≤–∞–µ–º –º–æ–¥–µ–ª—å –≤ —Ñ–æ–Ω–µ
log "üì• –°–∫–∞—á–∏–≤–∞–µ–º –º–æ–¥–µ–ª—å –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ (—ç—Ç–æ –∑–∞–π–º–µ—Ç –≤—Ä–µ–º—è)..."
nohup bash -c 'sleep 30 && ollama pull llama2:7b' > /dev/null 2>&1 &

# 13. –ù–ê–°–¢–†–û–ô–ö–ê –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò
log "üõ°Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏..."

# –§–∞–µ—Ä–≤–æ–ª
sudo ufw --force enable
sudo ufw allow 80/tcp
sudo ufw allow 8096/tcp
sudo ufw allow 3001/tcp
sudo ufw allow 8000/tcp
sudo ufw allow 11434/tcp
sudo ufw allow 22/tcp
sudo ufw allow 8088/tcp
sudo ufw allow 51820/udp
sudo ufw allow 7878/tcp
sudo ufw allow 8989/tcp
sudo ufw allow 9696/tcp
sudo ufw allow 8081/tcp

# Fail2ban
sudo apt install -y fail2ban
sudo systemctl enable fail2ban
sudo systemctl start fail2ban

# 14. –°–ö–†–ò–ü–¢ –û–ß–ò–°–¢–ö–ò –°–¢–†–ò–ú–ò–ù–ì–ê
log "üßπ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—á–∏—Å—Ç–∫–∏..."

cat > /home/$USER/scripts/cleanup_streaming.sh << EOF
#!/bin/bash
find "/home/$USER/media/streaming" -type f -mtime +1 -delete
find "/home/$USER/media/downloads" -type f -mtime +7 -delete
echo "\$(date): Cleaned streaming directory" >> "/home/$USER/scripts/cleanup.log"
EOF

chmod +x /home/$USER/scripts/cleanup_streaming.sh

# –î–æ–±–∞–≤–ª—è–µ–º –≤ cron
(crontab -l 2>/dev/null; echo "0 3 * * * /home/$USER/scripts/cleanup_streaming.sh") | crontab -

# 15. –ù–ê–°–¢–†–û–ô–ö–ê –°–ú–ï–ù–´ –ü–ê–†–û–õ–Ø
change_system_password

# 16. –°–û–ó–î–ê–ù–ò–ï –ì–õ–ê–í–ù–û–ô –°–¢–†–ê–ù–ò–¶–´ –° –ê–í–¢–û–†–ò–ó–ê–¶–ò–ï–ô
log "üè† –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π..."

# HTML –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
cat > /home/$USER/docker/homepage/index.html << 'HTMLEOF'
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–î–æ–º–∞—à–Ω–∏–π –°–µ—Ä–≤–µ—Ä - –í—Ö–æ–¥</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Arial', sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .login-container {
            background: white;
            padding: 40px;
            border-radius: 15px;
            box-shadow: 0 15px 35px rgba(0,0,0,0.1);
            width: 100%;
            max-width: 400px;
        }
        
        .logo {
            text-align: center;
            margin-bottom: 30px;
        }
        
        .logo h1 {
            color: #333;
            font-size: 28px;
            margin-bottom: 5px;
        }
        
        .logo p {
            color: #666;
            font-size: 14px;
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 5px;
            color: #333;
            font-weight: bold;
        }
        
        .form-group input {
            width: 100%;
            padding: 12px 15px;
            border: 2px solid #ddd;
            border-radius: 8px;
            font-size: 16px;
            transition: border-color 0.3s;
        }
        
        .form-group input:focus {
            outline: none;
            border-color: #667eea;
        }
        
        .login-btn {
            width: 100%;
            padding: 12px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 16px;
            font-weight: bold;
            cursor: pointer;
            transition: transform 0.2s;
        }
        
        .login-btn:hover {
            transform: translateY(-2px);
        }
        
        .error-message {
            color: #e74c3c;
            text-align: center;
            margin-top: 15px;
            display: none;
        }
        
        .services-info {
            margin-top: 25px;
            padding-top: 20px;
            border-top: 1px solid #eee;
            text-align: center;
            color: #666;
            font-size: 12px;
        }
        
        .password-change {
            margin-top: 15px;
            text-align: center;
        }
        
        .password-change a {
            color: #667eea;
            text-decoration: none;
            font-size: 14px;
        }
        
        .password-change a:hover {
            text-decoration: underline;
        }
    </style>
</head>
<body>
    <div class="login-container">
        <div class="logo">
            <h1>üè† –î–æ–º–∞—à–Ω–∏–π –°–µ—Ä–≤–µ—Ä</h1>
            <p>–í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</p>
        </div>
        
        <form id="loginForm">
            <div class="form-group">
                <label for="username">–õ–æ–≥–∏–Ω:</label>
                <input type="text" id="username" name="username" placeholder="–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω" required>
            </div>
            
            <div class="form-group">
                <label for="password">–ü–∞—Ä–æ–ª—å:</label>
                <input type="password" id="password" name="password" placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å" required>
            </div>
            
            <button type="submit" class="login-btn">–í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É</button>
            
            <div class="error-message" id="errorMessage">
                –ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å
            </div>
        </form>
        
        <div class="password-change">
            <a href="#" onclick="showPasswordChange()">–°–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å —Å–∏—Å—Ç–µ–º—ã</a>
        </div>
        
        <div class="services-info">
            –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã: Jellyfin ‚Ä¢ Nextcloud ‚Ä¢ AI –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç ‚Ä¢ –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–∞—Ä–æ–ª–µ–π ‚Ä¢ VPN
        </div>
    </div>

    <script>
        function showPasswordChange() {
            const newPassword = prompt('–î–ª—è —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ –∫–æ–º–∞–Ω–¥—É: change-pass\n\n–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å—Ç–∏—Ç –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è.');
            if (newPassword) {
                alert('–ü–∞—Ä–æ–ª—å –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–µ–Ω –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ.');
            }
        }

        document.getElementById('loginForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const username = document.getElementById('username').value;
            const password = document.getElementById('password').value;
            const errorMessage = document.getElementById('errorMessage');
            
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–Ω–∞ –∏ –ø–∞—Ä–æ–ª—è
            if (username === 'admin' && password === 'homeserver') {
                // –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –Ω–∞ 1 —á–∞—Å
                const sessionData = {
                    user: 'admin',
                    timestamp: Date.now(),
                    expires: Date.now() + (60 * 60 * 1000) // 1 —á–∞—Å
                };
                localStorage.setItem('server_session', JSON.stringify(sessionData));
                
                // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                window.location.href = '/heimdall';
            } else {
                errorMessage.style.display = 'block';
                setTimeout(() => {
                    errorMessage.style.display = 'none';
                }, 3000);
            }
        });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é —Å–µ—Å—Å–∏—é –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
        window.addEventListener('load', function() {
            const session = localStorage.getItem('server_session');
            if (session) {
                const sessionData = JSON.parse(session);
                if (sessionData.expires > Date.now()) {
                    window.location.href = '/heimdall';
                } else {
                    localStorage.removeItem('server_session');
                }
            }
        });
    </script>
</body>
</html>
HTMLEOF

# 17. –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê HEIMDALL –° –ü–û–ò–°–ö–û–ú
log "üè† –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Heimdall —Å –ø–æ–∏—Å–∫–æ–º –Ø–Ω–¥–µ–∫—Å–∞..."

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
sleep 30

# –°–æ–∑–¥–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É –¥–ª—è Heimdall
cat > /home/$USER/scripts/setup-heimdall.sh << 'HEIMDALL_EOF'
#!/bin/bash

USERNAME=$(whoami)
SERVER_IP=$(hostname -I | awk '{print $1}')

echo "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Heimdall —Å –ø–æ–∏—Å–∫–æ–º –Ø–Ω–¥–µ–∫—Å–∞..."

# –ñ–¥–µ–º –ø–æ–ª–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ Heimdall
sleep 20

# –°–æ–∑–¥–∞–µ–º apps.json –¥–ª—è Heimdall —Å –ø–æ–∏—Å–∫–æ–º –Ø–Ω–¥–µ–∫—Å–∞
cat > /home/$USERNAME/docker/heimdall/apps.json << 'APPS_EOF'
[
    {
        "name": "üîç –Ø–Ω–¥–µ–∫—Å –ü–æ–∏—Å–∫",
        "color": "#FF0000",
        "icon": "fab fa-yandex",
        "link": "https://yandex.ru",
        "description": "–ü–æ–∏—Å–∫ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ —á–µ—Ä–µ–∑ –Ø–Ω–¥–µ–∫—Å",
        "type": 1
    },
    {
        "name": "üé¨ Jellyfin",
        "color": "#00AAFF",
        "icon": "fas fa-play-circle",
        "link": "http://SERVER_IP:8096",
        "description": "–ú–µ–¥–∏–∞—Å–µ—Ä–≤–µ—Ä —Å —Ñ–∏–ª—å–º–∞–º–∏ –∏ —Å–µ—Ä–∏–∞–ª–∞–º–∏"
    },
    {
        "name": "üîç –ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤",
        "color": "#FF6B00", 
        "icon": "fas fa-search",
        "link": "http://SERVER_IP:5055",
        "description": "Overseerr - –ø–æ–∏—Å–∫ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞"
    },
    {
        "name": "üöÄ –ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞",
        "color": "#9C27B0",
        "icon": "fas fa-bolt",
        "link": "http://SERVER_IP:7878",
        "description": "Radarr - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–∏–ª—å–º–æ–≤"
    },
    {
        "name": "üì∫ –ê–≤—Ç–æ—Å–µ—Ä–∏–∞–ª—ã",
        "color": "#2196F3",
        "icon": "fas fa-tv",
        "link": "http://SERVER_IP:8989",
        "description": "Sonarr - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Ä–∏–∞–ª–æ–≤"
    },
    {
        "name": "üìù –°—É–±—Ç–∏—Ç—Ä—ã",
        "color": "#FF9800",
        "icon": "fas fa-closed-captioning",
        "link": "http://SERVER_IP:6767",
        "description": "Bazarr - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å—É–±—Ç–∏—Ç—Ä—ã"
    },
    {
        "name": "‚òÅÔ∏è Nextcloud",
        "color": "#0082C9",
        "icon": "fas fa-cloud",
        "link": "http://SERVER_IP/nextcloud",
        "description": "–§–∞–π–ª–æ–≤–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ"
    },
    {
        "name": "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥",
        "color": "#4CAF50",
        "icon": "fas fa-chart-bar",
        "link": "http://SERVER_IP:3001",
        "description": "Uptime Kuma - –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–µ—Ä–≤–∏—Å–æ–≤"
    },
    {
        "name": "üîê –ü–∞—Ä–æ–ª–∏",
        "color": "#CD5C5C",
        "icon": "fas fa-key",
        "link": "http://SERVER_IP:8000",
        "description": "Vaultwarden - –º–µ–Ω–µ–¥–∂–µ—Ä –ø–∞—Ä–æ–ª–µ–π"
    },
    {
        "name": "ü§ñ AI –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç",
        "color": "#8A2BE2",
        "icon": "fas fa-robot",
        "link": "http://SERVER_IP:11434",
        "description": "Ollama - –ª–æ–∫–∞–ª—å–Ω–∞—è –Ω–µ–π—Ä–æ—Å–µ—Ç—å"
    },
    {
        "name": "üõ°Ô∏è VPN",
        "color": "#2E7D32",
        "icon": "fas fa-shield-alt",
        "link": "http://SERVER_IP:8088/vpn",
        "description": "WireGuard - —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π VPN"
    },
    {
        "name": "üåÄ –¢–æ—Ä—Ä–µ–Ω—Ç—ã",
        "color": "#FFD700",
        "icon": "fas fa-download",
        "link": "http://SERVER_IP:8080",
        "description": "Tribler - —Ç–æ—Ä—Ä–µ–Ω—Ç-–∫–ª–∏–µ–Ω—Ç"
    },
    {
        "name": "üéØ –¢—Ä–µ–∫–µ—Ä—ã",
        "color": "#32CD32",
        "icon": "fas fa-search-plus",
        "link": "http://SERVER_IP:9117",
        "description": "Jackett - –ø–æ–∏—Å–∫ –ø–æ —Ç—Ä–µ–∫–µ—Ä–∞–º"
    }
]
APPS_EOF

# –ó–∞–º–µ–Ω—è–µ–º SERVER_IP –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π IP
sed -i "s/SERVER_IP/$SERVER_IP/g" /home/$USERNAME/docker/heimdall/apps.json

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º Heimdall –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
docker restart heimdall

echo "Heimdall –Ω–∞—Å—Ç—Ä–æ–µ–Ω —Å –Ø–Ω–¥–µ–∫—Å –ø–æ–∏—Å–∫–æ–º!"
HEIMDALL_EOF

chmod +x /home/$USER/scripts/setup-heimdall.sh
nohup /home/$USER/scripts/setup-heimdall.sh > /dev/null 2>&1 &

# 18. –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê –£–ß–ï–¢–ù–´–• –ó–ê–ü–ò–°–ï–ô
log "üë§ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —É—á–µ—Ç–Ω—ã–µ –∑–∞–ø–∏—Å–∏ (admin/homeserver)..."

cat > /home/$USER/scripts/setup-accounts.sh << 'ACCOUNTS_EOF'
#!/bin/bash

echo "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —É—á–µ—Ç–Ω—ã–µ –∑–∞–ø–∏—Å–∏..."

# –ñ–¥–µ–º –ø–æ–ª–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
sleep 60

# –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å —É—á–µ—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
cat > /home/$USER/accounts.txt << 'ACCEOF'
=== –£–ß–ï–¢–ù–´–ï –ó–ê–ü–ò–°–ò –î–û–ú–ê–®–ù–ï–ì–û –°–ï–†–í–ï–†–ê ===

–í–û –í–°–ï–• –°–ï–†–í–ò–°–ê–• –ò–°–ü–û–õ–¨–ó–£–ô–¢–ï:
–õ–æ–≥–∏–Ω: admin
–ü–∞—Ä–æ–ª—å: homeserver

–î–û–°–¢–£–ü –ö –°–ï–†–í–ò–°–ê–ú:

üè† –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (–≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É):
http://SERVER_IP:8088
–ò–õ–ò
https://DOMAIN.duckdns.org:8088
–õ–æ–≥–∏–Ω: admin
–ü–∞—Ä–æ–ª—å: homeserver

üè† Heimdall (–ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è):
http://SERVER_IP:80
–ü–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ

üé¨ Jellyfin (–º–µ–¥–∏–∞—Å–µ—Ä–≤–µ—Ä):
http://SERVER_IP:8096
–ü—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—Ö–æ–¥–µ —Å–æ–∑–¥–∞–π—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
- –ò–º—è: admin
- –ü–∞—Ä–æ–ª—å: homeserver

üöÄ –°–ò–°–¢–ï–ú–ê "–ù–ê–ñ–ê–õ –°–ú–û–¢–†–ò":
- Radarr (—Ñ–∏–ª—å–º—ã): http://SERVER_IP:7878
- Sonarr (—Å–µ—Ä–∏–∞–ª—ã): http://SERVER_IP:8989  
- Bazarr (—Å—É–±—Ç–∏—Ç—Ä—ã): http://SERVER_IP:6767
- Prowlarr (—Ç—Ä–µ–∫–µ—Ä—ã): http://SERVER_IP:9696
- qBittorrent: http://SERVER_IP:8081

üõ°Ô∏è VPN –î–õ–Ø HIDIFACE:
–ö–æ–Ω—Ñ–∏–≥ –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: /home/USER/docker/wireguard/client.conf
–û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥ –∏–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª –≤ HidiFace

‚òÅÔ∏è Nextcloud (—Ñ–∞–π–ª–æ–≤–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ):
http://SERVER_IP/nextcloud  
–ü—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—Ö–æ–¥–µ:
- –õ–æ–≥–∏–Ω: admin
- –ü–∞—Ä–æ–ª—å: homeserver

üîê Vaultwarden (–º–µ–Ω–µ–¥–∂–µ—Ä –ø–∞—Ä–æ–ª–µ–π):
http://SERVER_IP:8000
–ù–∞–∂–º–∏—Ç–µ "Create account":
- Email: admin@localhost
- –ü–∞—Ä–æ–ª—å: homeserver

üîç Overseerr (–ø–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤):
http://SERVER_IP:5055
–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Jellyfin:
- URL: http://jellyfin:8096
- –õ–æ–≥–∏–Ω: admin  
- –ü–∞—Ä–æ–ª—å: homeserver

üìä Uptime Kuma (–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥):
http://SERVER_IP:3001
–ü—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—Ö–æ–¥–µ —Å–æ–∑–¥–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å: homeserver

ü§ñ Ollama (–Ω–µ–π—Ä–æ—Å–µ—Ç—å):
http://SERVER_IP:11434
–î–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑ API, –ø–∞—Ä–æ–ª—å –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è

üîç –Ø–Ω–¥–µ–∫—Å –ü–æ–∏—Å–∫:
–î–æ—Å—Ç—É–ø–µ–Ω –ø—Ä—è–º–æ –∏–∑ Heimdall

=== –ö–ê–ö –ò–°–ü–û–õ–¨–ó–û–í–ê–¢–¨ –°–ò–°–¢–ï–ú–£ "–ù–ê–ñ–ê–õ –°–ú–û–¢–†–ò" ===
1. –ó–∞–π–¥–∏—Ç–µ –≤ Radarr (–ø–æ—Ä—Ç 7878) –∏–ª–∏ Sonarr (–ø–æ—Ä—Ç 8989)
2. –î–æ–±–∞–≤—å—Ç–µ —Ñ–∏–ª—å–º –∏–ª–∏ —Å–µ—Ä–∏–∞–ª —á–µ—Ä–µ–∑ –ø–æ–∏—Å–∫
3. –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞–π–¥–µ—Ç, —Å–∫–∞—á–∞–µ—Ç –∏ –¥–æ–±–∞–≤–∏—Ç –≤ Jellyfin
4. –°—É–±—Ç–∏—Ç—Ä—ã –Ω–∞ —Ä—É—Å—Å–∫–æ–º –ø–æ—è–≤—è—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ Bazarr
5. –ü–æ—Å–ª–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ñ–∞–π–ª—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è—é—Ç—Å—è

=== –°–ú–ï–ù–ê –ü–ê–†–û–õ–Ø –°–ò–°–¢–ï–ú–´ ===
–í—ã–ø–æ–ª–Ω–∏—Ç–µ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ: change-pass

=== VPN –î–õ–Ø –û–ë–•–û–î–ê –ë–õ–û–ö–ò–†–û–í–û–ö ===
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–∞–π–ª client.conf –≤ –ø–∞–ø–∫–µ wireguard
–ò–ª–∏ –æ—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ HidiFace

=== –í–ê–ñ–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø ===
1. –°–Ω–∞—á–∞–ª–∞ –∑–∞–π–¥–∏—Ç–µ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É (–ø–æ—Ä—Ç 8088)
2. –í–æ–π–¥–∏—Ç–µ —Å –ª–æ–≥–∏–Ω–æ–º admin –∏ –ø–∞—Ä–æ–ª–µ–º homeserver
3. –í—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Heimdall
4. –û—Ç—Ç—É–¥–∞ –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ–¥–Ω–∏–º –∫–ª–∏–∫–æ–º
ACCEOF

# –ó–∞–º–µ–Ω—è–µ–º SERVER_IP –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π IP –∏ DOMAIN
SERVER_IP=$(hostname -I | awk '{print $1}')
DOMAIN="domenforserver123"
sed -i "s/SERVER_IP/$SERVER_IP/g" /home/$USER/accounts.txt
sed -i "s/DOMAIN/$DOMAIN/g" /home/$USER/accounts.txt
sed -i "s/USER/$USER/g" /home/$USER/accounts.txt

# –°–æ–∑–¥–∞–µ–º QR-–∫–æ–¥ –¥–ª—è VPN –∫–æ–Ω—Ñ–∏–≥–∞
if command -v qrencode &> /dev/null; then
    sudo apt install -y qrencode
    qrencode -t ANSIUTF8 < /home/$USER/docker/wireguard/client.conf
    echo "QR-–∫–æ–¥ –¥–ª—è VPN –∫–æ–Ω—Ñ–∏–≥–∞ –≤—ã—à–µ"
fi

echo "–£—á–µ—Ç–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!"
echo "–§–∞–π–ª —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏: /home/$USER/accounts.txt"
ACCOUNTS_EOF

chmod +x /home/$USER/scripts/setup-accounts.sh
nohup /home/$USER/scripts/setup-accounts.sh > /dev/null 2>&1 &

# 19. –ù–ê–°–¢–†–û–ô–ö–ê –ü–ï–†–ï–ù–ê–ü–†–ê–í–õ–ï–ù–ò–ô –î–õ–Ø –ì–õ–ê–í–ù–û–ô –°–¢–†–ê–ù–ò–¶–´
log "üîÄ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—é –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã..."

cat > /home/$USER/scripts/setup-routing.sh << 'ROUTINGEOF'
#!/bin/bash

DOMAIN="domenforserver123"
SERVER_IP=$(hostname -I | awk '{print $1}')

echo "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—é..."

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
sleep 20

# –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥ Nginx –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
cat > /home/$USER/docker/homepage/default.conf << 'NGINXEOF'
server {
    listen 80;
    server_name _;
    
    # –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ /index.html;
    }
    
    # –ü—Ä–æ–∫—Å–∏ –¥–ª—è Heimdall
    location /heimdall {
        proxy_pass http://heimdall:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ VPN
    location /vpn {
        return 302 /;
    }
}
NGINXEOF

# –ö–æ–ø–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º
docker cp /home/$USER/docker/homepage/default.conf homepage:/etc/nginx/conf.d/default.conf
docker exec homepage nginx -s reload

echo "–ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞!"
ROUTINGEOF

chmod +x /home/$USER/scripts/setup-routing.sh
nohup /home/$USER/scripts/setup-routing.sh > /dev/null 2>&1 &

# 20. –§–ò–ù–ê–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø
echo ""
echo "=========================================="
echo "üéâ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!"
echo "=========================================="
echo ""
echo "üåê –í–ê–® –î–û–ú–ï–ù: https://$DUCKDNS_URL"
echo ""
echo "üîê –°–ò–°–¢–ï–ú–ê –î–û–°–¢–£–ü–ê:"
echo "üè† –ì–õ–ê–í–ù–ê–Ø –°–¢–†–ê–ù–ò–¶–ê –í–•–û–î–ê: http://$SERVER_IP:8088"
echo "   –ò–õ–ò https://$DUCKDNS_URL:8088"
echo ""
echo "üë§ –î–ê–ù–ù–´–ï –î–õ–Ø –í–•–û–î–ê:"
echo "   –õ–æ–≥–∏–Ω: admin"
echo "   –ü–∞—Ä–æ–ª—å: homeserver"
echo ""
echo "üé¨ –°–ò–°–¢–ï–ú–ê '–ù–ê–ñ–ê–õ –°–ú–û–¢–†–ò':"
echo "   Radarr (—Ñ–∏–ª—å–º—ã): http://$DUCKDNS_URL:7878"
echo "   Sonarr (—Å–µ—Ä–∏–∞–ª—ã): http://$DUCKDNS_URL:8989"
echo "   Bazarr (—Å—É–±—Ç–∏—Ç—Ä—ã): http://$DUCKDNS_URL:6767"
echo ""
echo "üõ°Ô∏è –í–ê–® –°–û–ë–°–¢–í–ï–ù–ù–´–ô VPN:"
echo "   –ö–æ–Ω—Ñ–∏–≥ –¥–ª—è HidiFace: /home/$USER/docker/wireguard/client.conf"
echo "   –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ QR-–∫–æ–¥ –∏–∑ —Ñ–∞–π–ª–∞ accounts.txt"
echo ""
echo "üîß –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –í–û–ó–ú–û–ñ–ù–û–°–¢–ò:"
echo "   –°–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è —Å–∏—Å—Ç–µ–º—ã: –≤—ã–ø–æ–ª–Ω–∏—Ç–µ 'change-pass' –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ"
echo "   –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π IP: –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ ($SERVER_IP)"
echo "   –ê–≤—Ç–æ–æ—á–∏—Å—Ç–∫–∞: –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å–º—ã —É–¥–∞–ª—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
echo ""
echo "‚ö° –ö–ê–ö –ù–ê–ß–ê–¢–¨:"
echo "1. –û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ: http://$SERVER_IP:8088"
echo "2. –í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω: admin, –ø–∞—Ä–æ–ª—å: homeserver"
echo "3. –í—ã –ø–æ–ø–∞–¥–µ—Ç–µ –≤ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Heimdall"
echo "4. –û—Ç—Ç—É–¥–∞ –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ–¥–Ω–∏–º –∫–ª–∏–∫–æ–º"
echo "5. –î–ª—è VPN: –∏–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ client.conf –≤ HidiFace"
echo ""
echo "üìã –ü–û–õ–ù–ê–Ø –ò–ù–°–¢–†–£–ö–¶–ò–Ø:"
echo "–§–∞–π–ª —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏: /home/$USER/accounts.txt"
echo ""
echo "üöÄ –ì–æ—Ç–æ–≤–æ! –í–∞—à –¥–æ–º–∞—à–Ω–∏–π —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω —Å–æ –≤—Å–µ–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏!"
echo "=========================================="
